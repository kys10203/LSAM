!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
AP471Blocking_io	AP471/cnfg471.c	/^int AP471Blocking_io(int nHandle, struct AP471_isr_info *isr_info, long *addr, long value, long cmd)$/;"	f
AP471Blocking_io	vmetech/AP471/cnfg471.c	/^int AP471Blocking_io(int nHandle, struct AP471_isr_info *isr_info, long *addr, long value, long cmd)$/;"	f
AP471_isr_info	AP471/AP471.h	/^struct AP471_isr_info$/;"	s
AP471_isr_info	vmetech/AP471/AP471.h	/^struct AP471_isr_info$/;"	s
APBOARD	AP471/AP471.h	55;"	d
APBOARD	vmetech/AP471/AP471.h	55;"	d
APBlockingStartConvert	apcommon/apcommon.c	/^uint32_t APBlockingStartConvert(int nHandle, long *p, long v, long parameter)$/;"	f
APBlockingStartConvert	vmetech/apcommon/apcommon.c	/^uint32_t APBlockingStartConvert(int nHandle, long *p, long v, long parameter)$/;"	f
APClose	apcommon/apcommon.c	/^APSTATUS APClose(int nHandle)$/;"	f
APClose	vmetech/apcommon/apcommon.c	/^APSTATUS APClose(int nHandle)$/;"	f
APDATA_STRUCT	apcommon/apcommon.h	/^}APDATA_STRUCT;$/;"	t	typeref:struct:__anon3
APDATA_STRUCT	vmetech/apcommon/apcommon.h	/^}APDATA_STRUCT;$/;"	t	typeref:struct:__anon1
APInitialize	apcommon/apcommon.c	/^APSTATUS APInitialize(int nHandle)$/;"	f
APInitialize	vmetech/apcommon/apcommon.c	/^APSTATUS APInitialize(int nHandle)$/;"	f
APOpen	apcommon/apcommon.c	/^APSTATUS APOpen(int nDevInstance, int* pHandle, char* devname)$/;"	f
APOpen	vmetech/apcommon/apcommon.c	/^APSTATUS APOpen(int nDevInstance, int* pHandle, char* devname)$/;"	f
APSTATUS	apcommon/apcommon.h	/^typedef int APSTATUS;			\/* custom made APSTATUS data type, used as a$/;"	t
APSTATUS	vmetech/apcommon/apcommon.h	/^typedef int APSTATUS;			\/* custom made APSTATUS data type, used as a$/;"	t
APTerminateBlockedStart	apcommon/apcommon.c	/^void APTerminateBlockedStart(int nHandle)$/;"	f
APTerminateBlockedStart	vmetech/apcommon/apcommon.c	/^void APTerminateBlockedStart(int nHandle)$/;"	f
AP_BOARD_MEMORY_MAP	apcommon/apcommon.h	/^}AP_BOARD_MEMORY_MAP;$/;"	t	typeref:struct:__anon4
AP_BOARD_MEMORY_MAP	vmetech/apcommon/apcommon.h	/^}AP_BOARD_MEMORY_MAP;$/;"	t	typeref:struct:__anon2
AP_INT_ENABLE	apcommon/apcommon.h	84;"	d
AP_INT_ENABLE	vmetech/apcommon/apcommon.h	84;"	d
AP_INT_PENDING	apcommon/apcommon.h	85;"	d
AP_INT_PENDING	vmetech/apcommon/apcommon.h	85;"	d
AP_RESET	apcommon/apcommon.h	83;"	d
AP_RESET	vmetech/apcommon/apcommon.h	83;"	d
ARRAY_SIZE	appdef.h	5;"	d
Accept	sock.cpp	/^int CTcpSocket::Accept(sockaddr * addr, socklen_t * addrlen)$/;"	f	class:CTcpSocket
AcceptThread	jigapp.cpp	/^void CJigApp::AcceptThread()$/;"	f	class:CJigApp
AddAP	apcommon/apcommon.c	/^void AddAP(APDATA_STRUCT* pAP)$/;"	f
AddAP	vmetech/apcommon/apcommon.c	/^void AddAP(APDATA_STRUCT* pAP)$/;"	f
BOOL	apcommon/apcommon.h	/^typedef int BOOL;$/;"	t
BOOL	vmetech/apcommon/apcommon.h	/^typedef int BOOL;$/;"	t
BOTH_EMPTY	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	1100;"	d	file:
BUILDING_FOR_KERNEL	AP471/dev471/dev471.c	41;"	d	file:
BUILDING_FOR_KERNEL	vmetech/AP471/dev471/dev471.c	41;"	d	file:
BYTE	apcommon/apcommon.h	/^typedef unsigned char BYTE;$/;"	t
BYTE	apptype.h	/^typedef unsigned char			BYTE;$/;"	t
BYTE	vmetech/apcommon/apcommon.h	/^typedef unsigned char BYTE;$/;"	t
Bin2Str	sock.cpp	/^string CIpAddress::Bin2Str(in_addr addr)$/;"	f	class:CIpAddress
Bind	sock.cpp	/^int CTcpSocket::Bind(string ipaddr, int port)$/;"	f	class:CTcpSocket
Bind	sock.cpp	/^int CUdpSocket::Bind(string ipaddr, int port)$/;"	f	class:CUdpSocket
BoardIntEnableStat	AP471/AP471.h	/^  uint32_t BoardIntEnableStat;         \/* board interrupt enable register *\/$/;"	m	struct:sblk471
BoardIntEnableStat	vmetech/AP471/AP471.h	/^  uint32_t BoardIntEnableStat;         \/* board interrupt enable register *\/$/;"	m	struct:sblk471
CAp471	ap471.cpp	/^CAp471::CAp471()$/;"	f	class:CAp471
CAp471	ap471.h	/^class CAp471$/;"	c
CCommPkt	commpkt.cpp	/^CCommPkt::CCommPkt() : m_pPktBuf(0), m_nPktLen(0)$/;"	f	class:CCommPkt
CCommPkt	commpkt.h	/^class CCommPkt$/;"	c
CConfig	config.cpp	/^CConfig::CConfig()$/;"	f	class:CConfig
CConfig	config.h	/^class CConfig$/;"	c
CDate	date.cpp	/^CDate::CDate()$/;"	f	class:CDate
CDate	date.cpp	/^CDate::CDate(INT32 year, INT32 mon, INT32 day)$/;"	f	class:CDate
CDate	date.h	/^class CDate$/;"	c
CDev	dev.h	/^	CDev()$/;"	f	class:CDev
CDev	dev.h	/^class CDev$/;"	c
CFLAGS	Makefile	/^CFLAGS=-W -Wall$/;"	m
CFile	file.cpp	/^CFile::CFile()$/;"	f	class:CFile
CFile	file.h	/^class CFile$/;"	c
CHAR	apptype.h	/^typedef char					CHAR;$/;"	t
CIpAddress	sock.cpp	/^CIpAddress::CIpAddress()$/;"	f	class:CIpAddress
CIpAddress	sock.h	/^class CIpAddress$/;"	c
CJigApp	jigapp.cpp	/^CJigApp::CJigApp()$/;"	f	class:CJigApp
CJigApp	jigapp.h	/^class CJigApp$/;"	c
CJigPkt	jigpkt.cpp	/^CJigPkt::CJigPkt()$/;"	f	class:CJigPkt
CJigPkt	jigpkt.h	/^class CJigPkt : public CCommPkt$/;"	c
CMutex	thread.cpp	/^CMutex::CMutex()$/;"	f	class:CMutex
CMutex	thread.h	/^class CMutex$/;"	c
CSocket	sock.cpp	/^CSocket::CSocket()$/;"	f	class:CSocket
CSocket	sock.h	/^class CSocket$/;"	c
CString	str.cpp	/^CString::CString()$/;"	f	class:CString
CString	str.h	/^class CString$/;"	c
CTcpSocket	sock.cpp	/^CTcpSocket::CTcpSocket()$/;"	f	class:CTcpSocket
CTcpSocket	sock.cpp	/^CTcpSocket::CTcpSocket(int fd)$/;"	f	class:CTcpSocket
CTcpSocket	sock.h	/^class CTcpSocket : public CSocket$/;"	c
CTextFile	file.cpp	/^CTextFile::CTextFile()$/;"	f	class:CTextFile
CTextFile	file.h	/^class CTextFile : public CFile$/;"	c
CThread	thread.cpp	/^CThread::CThread()$/;"	f	class:CThread
CThread	thread.h	/^class CThread$/;"	c
CTty	tty.cpp	/^CTty::CTty()$/;"	f	class:CTty
CTty	tty.h	/^class CTty : public CDev$/;"	c
CUdpSocket	sock.cpp	/^CUdpSocket::CUdpSocket()$/;"	f	class:CUdpSocket
CUdpSocket	sock.h	/^class CUdpSocket : public CSocket$/;"	c
Close	ap471.cpp	/^void CAp471::Close()$/;"	f	class:CAp471
Close	dev.h	/^	virtual void Close()$/;"	f	class:CDev
Close	file.cpp	/^void CFile::Close()$/;"	f	class:CFile
Close	sock.cpp	/^void CSocket::Close()$/;"	f	class:CSocket
Close	tty.cpp	/^void CTty::Close()$/;"	f	class:CTty
Create	commpkt.cpp	/^unsigned int CCommPkt::Create(unsigned int pktlen)$/;"	f	class:CCommPkt
Create	jigpkt.cpp	/^unsigned int CJigPkt::Create(unsigned int msgid, unsigned int datalen, unsigned char * data)$/;"	f	class:CJigPkt
Create	thread.cpp	/^int CThread::Create(void *(*start_routine)(void *), void * arg)$/;"	f	class:CThread
DD	date.h	/^	UINT32 DD;$/;"	m	class:CDate
DEBCLOCK	AP471/AP471.h	68;"	d
DEBCLOCK	vmetech/AP471/AP471.h	68;"	d
DEBCONTROL	AP471/AP471.h	69;"	d
DEBCONTROL	vmetech/AP471/AP471.h	69;"	d
DEBDURATION	AP471/AP471.h	70;"	d
DEBDURATION	vmetech/AP471/AP471.h	70;"	d
DEBUG_AUTOCONF	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	347;"	d	file:
DEBUG_INTR	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	351;"	d	file:
DEBUG_INTR	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	353;"	d	file:
DEBUG_MODE	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	108;"	d	file:
DEF_FAIL	jigapp.h	/^	DEF_FAIL = 0,$/;"	e	enum:__anon5
DEF_OK	jigapp.h	/^	DEF_OK = 1,$/;"	e	enum:__anon5
DEVICE_NAME	AP471/AP471.h	56;"	d
DEVICE_NAME	vmetech/AP471/AP471.h	56;"	d
DIS_WAKE_INTR	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	149;"	d	file:
DIVISOR_CHANGED	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	154;"	d	file:
DayOfTheWeek	date.cpp	/^INT32 CDate::DayOfTheWeek()$/;"	f	class:CDate
DayOfTheWeek	date.cpp	/^INT32 CDate::DayOfTheWeek(INT32 year, INT32 mon, INT32 day)$/;"	f	class:CDate
DbgThread	jigapp.cpp	/^void CJigApp::DbgThread()$/;"	f	class:CJigApp
DebounceClockSelect	AP471/AP471.h	/^  uint32_t DebounceClockSelect;		\/* Bit 0 *\/$/;"	m	struct:map471
DebounceClockSelect	vmetech/AP471/AP471.h	/^  uint32_t DebounceClockSelect;		\/* Bit 0 *\/$/;"	m	struct:map471
DebounceClockSelectStat	AP471/AP471.h	/^  uint32_t DebounceClockSelectStat;    \/* Bit 0 *\/$/;"	m	struct:sblk471
DebounceClockSelectStat	vmetech/AP471/AP471.h	/^  uint32_t DebounceClockSelectStat;    \/* Bit 0 *\/$/;"	m	struct:sblk471
DebounceControl	AP471/AP471.h	/^  uint32_t DebounceControl[3];		\/* Bits 15:0 *\/$/;"	m	struct:map471
DebounceControl	vmetech/AP471/AP471.h	/^  uint32_t DebounceControl[3];		\/* Bits 15:0 *\/$/;"	m	struct:map471
DebounceControlStat	AP471/AP471.h	/^  uint32_t DebounceControlStat[3];     \/* Bits 15:0 *\/$/;"	m	struct:sblk471
DebounceControlStat	vmetech/AP471/AP471.h	/^  uint32_t DebounceControlStat[3];     \/* Bits 15:0 *\/$/;"	m	struct:sblk471
DebounceDuration	AP471/AP471.h	/^  uint32_t DebounceDuration[3];		\/* Bits 15:0 *\/$/;"	m	struct:map471
DebounceDuration	vmetech/AP471/AP471.h	/^  uint32_t DebounceDuration[3];		\/* Bits 15:0 *\/$/;"	m	struct:map471
DebounceDurationStat	AP471/AP471.h	/^  uint32_t DebounceDurationStat[3];    \/* Bits 15:0 *\/$/;"	m	struct:sblk471
DebounceDurationStat	vmetech/AP471/AP471.h	/^  uint32_t DebounceDurationStat[3];    \/* Bits 15:0 *\/$/;"	m	struct:sblk471
DebugStringHex	jigapp.cpp	/^void CJigApp::DebugStringHex(string chkmsg, unsigned char * buf, int len)$/;"	f	class:CJigApp
Delete	commpkt.cpp	/^void CCommPkt::Delete()$/;"	f	class:CCommPkt
DeleteAP	apcommon/apcommon.c	/^void DeleteAP(int nHandle)$/;"	f
DeleteAP	vmetech/apcommon/apcommon.c	/^void DeleteAP(int nHandle)$/;"	f
Detach	thread.cpp	/^int CThread::Detach()$/;"	f	class:CThread
DisableAPInterrupts	apcommon/apcommon.c	/^APSTATUS DisableAPInterrupts(int nHandle)$/;"	f
DisableAPInterrupts	vmetech/apcommon/apcommon.c	/^APSTATUS DisableAPInterrupts(int nHandle)$/;"	f
ENABLE_INTERNAL_LOOPBACK	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	139;"	d	file:
ENABLE_RS485	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	40;"	d	file:
ERROR	apcommon/apcommon.h	95;"	d
ERROR	vmetech/apcommon/apcommon.h	95;"	d
EV_ENABLE	AP471/AP471.h	65;"	d
EV_ENABLE	vmetech/AP471/AP471.h	65;"	d
EV_POLARITY	AP471/AP471.h	67;"	d
EV_POLARITY	vmetech/AP471/AP471.h	67;"	d
EV_TYPE	AP471/AP471.h	66;"	d
EV_TYPE	vmetech/AP471/AP471.h	66;"	d
EXAR_READ_REG	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	1753;"	d	file:
EXAR_SET_MULTIDROP_MODE_AUTO	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	1757;"	d	file:
EXAR_SET_MULTIDROP_MODE_NORMAL	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	1756;"	d	file:
EXAR_SET_NON_STANDARD_BAUDRATE	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	1759;"	d	file:
EXAR_SET_REMOVE_MULTIDROP_MODE	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	1758;"	d	file:
EXAR_WRITE_REG	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	1754;"	d	file:
E_INVALID_HANDLE	apcommon/apcommon.h	98;"	d
E_INVALID_HANDLE	vmetech/apcommon/apcommon.h	98;"	d
E_NOT_IMPLEMENTED	apcommon/apcommon.h	100;"	d
E_NOT_IMPLEMENTED	vmetech/apcommon/apcommon.h	100;"	d
E_NOT_INITIALIZED	apcommon/apcommon.h	99;"	d
E_NOT_INITIALIZED	vmetech/apcommon/apcommon.h	99;"	d
E_NO_INTERRUPTS	apcommon/apcommon.h	101;"	d
E_NO_INTERRUPTS	vmetech/apcommon/apcommon.h	101;"	d
E_OUT_OF_APS	apcommon/apcommon.h	97;"	d
E_OUT_OF_APS	vmetech/apcommon/apcommon.h	97;"	d
E_OUT_OF_MEMORY	apcommon/apcommon.h	96;"	d
E_OUT_OF_MEMORY	vmetech/apcommon/apcommon.h	96;"	d
EnableAPInterrupts	apcommon/apcommon.c	/^APSTATUS EnableAPInterrupts(int nHandle)$/;"	f
EnableAPInterrupts	vmetech/apcommon/apcommon.c	/^APSTATUS EnableAPInterrupts(int nHandle)$/;"	f
EndDay	date.cpp	/^INT32 CDate::EndDay(INT32 year, INT32 mon)$/;"	f	class:CDate
Errno	sock.cpp	/^int CSocket::Errno()$/;"	f	class:CSocket
EventEnable	AP471/AP471.h	/^  uint32_t EventEnable[3];    \/* interrupt enable register *\/$/;"	m	struct:cblk471
EventEnable	vmetech/AP471/AP471.h	/^  uint32_t EventEnable[3];    \/* interrupt enable register *\/$/;"	m	struct:cblk471
EventEnableReg	AP471/AP471.h	/^  uint32_t EventEnableReg[3];           \/* Bits 15:0 *\/$/;"	m	struct:map471
EventEnableReg	vmetech/AP471/AP471.h	/^  uint32_t EventEnableReg[3];           \/* Bits 15:0 *\/$/;"	m	struct:map471
EventEnableStat	AP471/AP471.h	/^  uint32_t EventEnableStat[3];         \/* Bits 15:0 *\/$/;"	m	struct:sblk471
EventEnableStat	vmetech/AP471/AP471.h	/^  uint32_t EventEnableStat[3];         \/* Bits 15:0 *\/$/;"	m	struct:sblk471
EventPending	AP471/AP471.h	/^  uint32_t EventPending[3];	\/* board interrupt pending flags *\/$/;"	m	struct:AP471_isr_info
EventPending	vmetech/AP471/AP471.h	/^  uint32_t EventPending[3];	\/* board interrupt pending flags *\/$/;"	m	struct:AP471_isr_info
EventPendingClrReg	AP471/AP471.h	/^  uint32_t EventPendingClrReg[3];	\/* Bits 15:0 *\/$/;"	m	struct:map471
EventPendingClrReg	vmetech/AP471/AP471.h	/^  uint32_t EventPendingClrReg[3];	\/* Bits 15:0 *\/$/;"	m	struct:map471
EventPendingClrStat	AP471/AP471.h	/^  uint32_t EventPendingClrStat[3];     \/* Bits 15:0 *\/$/;"	m	struct:sblk471
EventPendingClrStat	vmetech/AP471/AP471.h	/^  uint32_t EventPendingClrStat[3];     \/* Bits 15:0 *\/$/;"	m	struct:sblk471
EventPolarity	AP471/AP471.h	/^  uint32_t EventPolarity[3];  \/* event polarity registers *\/$/;"	m	struct:cblk471
EventPolarity	vmetech/AP471/AP471.h	/^  uint32_t EventPolarity[3];  \/* event polarity registers *\/$/;"	m	struct:cblk471
EventPolarityReg	AP471/AP471.h	/^  uint32_t EventPolarityReg[3];         \/* Bits 15:0 *\/$/;"	m	struct:map471
EventPolarityReg	vmetech/AP471/AP471.h	/^  uint32_t EventPolarityReg[3];         \/* Bits 15:0 *\/$/;"	m	struct:map471
EventPolarityStat	AP471/AP471.h	/^  uint32_t EventPolarityStat[3];       \/* Bits 15:0 *\/$/;"	m	struct:sblk471
EventPolarityStat	vmetech/AP471/AP471.h	/^  uint32_t EventPolarityStat[3];       \/* Bits 15:0 *\/$/;"	m	struct:sblk471
EventType	AP471/AP471.h	/^  uint32_t EventType[3];      \/* event type registers *\/$/;"	m	struct:cblk471
EventType	vmetech/AP471/AP471.h	/^  uint32_t EventType[3];      \/* event type registers *\/$/;"	m	struct:cblk471
EventTypeReg	AP471/AP471.h	/^  uint32_t EventTypeReg[3];             \/* Bits 15:0 *\/$/;"	m	struct:map471
EventTypeReg	vmetech/AP471/AP471.h	/^  uint32_t EventTypeReg[3];             \/* Bits 15:0 *\/$/;"	m	struct:map471
EventTypeStat	AP471/AP471.h	/^  uint32_t EventTypeStat[3];           \/* Bits 15:0 *\/$/;"	m	struct:sblk471
EventTypeStat	vmetech/AP471/AP471.h	/^  uint32_t EventTypeStat[3];           \/* Bits 15:0 *\/$/;"	m	struct:sblk471
Exit	thread.cpp	/^void CThread::Exit()$/;"	f	class:CThread
ExtractData	jigpkt.cpp	/^unsigned char * CJigPkt::ExtractData(unsigned char * pktbuf, unsigned int pktlen, bool * extract)$/;"	f	class:CJigPkt
ExtractData16	jigpkt.cpp	/^unsigned short CJigPkt::ExtractData16(unsigned char * pktbuf, unsigned int pktlen, bool * extract, unsigned int data_no)$/;"	f	class:CJigPkt
ExtractData32	jigpkt.cpp	/^unsigned int CJigPkt::ExtractData32(unsigned char * pktbuf, unsigned int pktlen, bool * extract, unsigned int data_no)$/;"	f	class:CJigPkt
ExtractData64	jigpkt.cpp	/^unsigned long long CJigPkt::ExtractData64(unsigned char * pktbuf, unsigned int pktlen, bool * extract, unsigned int data_no)$/;"	f	class:CJigPkt
ExtractData8	jigpkt.cpp	/^unsigned char CJigPkt::ExtractData8(unsigned char * pktbuf, unsigned int pktlen, bool * extract, unsigned int data_no)$/;"	f	class:CJigPkt
ExtractDataLength	jigpkt.cpp	/^unsigned int CJigPkt::ExtractDataLength(unsigned char * pktbuf, unsigned int pktlen, bool * extract)$/;"	f	class:CJigPkt
ExtractMsgID	jigpkt.cpp	/^unsigned int CJigPkt::ExtractMsgID(unsigned char * pktbuf, unsigned int pktlen, bool * extract)$/;"	f	class:CJigPkt
FALSE	apcommon/apcommon.h	79;"	d
FALSE	vmetech/apcommon/apcommon.h	79;"	d
FLOAT32	apptype.h	/^typedef float 					FLOAT32;$/;"	t
FLOAT64	apptype.h	/^typedef double					FLOAT64;$/;"	t
FL_BASE0	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	96;"	d	file:
FL_BASE_MASK	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	95;"	d	file:
FL_GET_BASE	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	97;"	d	file:
FPGAAdrData	AP471/AP471.h	/^  uint32_t FPGAAdrData[10];   \/* FPGA address & data order:0,1,2,20 thru 26 *\/$/;"	m	struct:cblk471
FPGAAdrData	vmetech/AP471/AP471.h	/^  uint32_t FPGAAdrData[10];   \/* FPGA address & data order:0,1,2,20 thru 26 *\/$/;"	m	struct:cblk471
FirmwareRevision	AP471/AP471.h	/^  uint32_t FirmwareRevision;		\/* 7:0 *\/$/;"	m	struct:map471
FirmwareRevision	vmetech/AP471/AP471.h	/^  uint32_t FirmwareRevision;		\/* 7:0 *\/$/;"	m	struct:map471
GetAP	apcommon/apcommon.c	/^APDATA_STRUCT* GetAP(int nHandle)$/;"	f
GetAP	vmetech/apcommon/apcommon.c	/^APDATA_STRUCT* GetAP(int nHandle)$/;"	f
GetAPAddress	apcommon/apcommon.c	/^APSTATUS GetAPAddress(int nHandle, long* pAddress)$/;"	f
GetAPAddress	vmetech/apcommon/apcommon.c	/^APSTATUS GetAPAddress(int nHandle, long* pAddress)$/;"	f
GetAt	ap471.cpp	/^UINT16 CAp471::GetAt(UINT16 port, UINT16 point)$/;"	f	class:CAp471
GetAt	commpkt.cpp	/^unsigned char CCommPkt::GetAt(unsigned int idx)$/;"	f	class:CCommPkt
GetConfig	config.cpp	/^bool CConfig::GetConfig(const char * path, const char * cfgname, char * cfgval, unsigned int cfglen)$/;"	f	class:CConfig
GetData	jigpkt.cpp	/^unsigned char * CJigPkt::GetData()$/;"	f	class:CJigPkt
GetDataLength	jigpkt.cpp	/^unsigned int CJigPkt::GetDataLength()$/;"	f	class:CJigPkt
GetDataVal	jigpkt.cpp	/^unsigned char CJigPkt::GetDataVal(unsigned int data_no)$/;"	f	class:CJigPkt
GetFd	dev.h	/^	int GetFd(){return m_nFd;};$/;"	f	class:CDev
GetGpio	jigapp.cpp	/^UINT16 CJigApp::GetGpio(UINT32 pin_name)$/;"	f	class:CJigApp
GetIobGpio	jigapp.cpp	/^UINT16 CJigApp::GetIobGpio(UINT32 pin_name)$/;"	f	class:CJigApp
GetMsgID	jigpkt.cpp	/^unsigned int CJigPkt::GetMsgID()$/;"	f	class:CJigPkt
GetOccGpio	jigapp.cpp	/^UINT16 CJigApp::GetOccGpio(UINT32 pin_name)$/;"	f	class:CJigApp
GetPort	ap471.cpp	/^UINT16 CAp471::GetPort(UINT16 port)$/;"	f	class:CAp471
GetReadyLed	jigapp.cpp	/^UINT16 CJigApp::GetReadyLed()$/;"	f	class:CJigApp
GetString	file.cpp	/^size_t CTextFile::GetString(char * ptr, size_t size)$/;"	f	class:CTextFile
GetSystemDate	date.cpp	/^string CDate::GetSystemDate()$/;"	f	class:CDate
GetTccGpio	jigapp.cpp	/^UINT16 CJigApp::GetTccGpio(UINT32 pin_name)$/;"	f	class:CJigApp
Hour	date.cpp	/^INT32 CDate::Hour()$/;"	f	class:CDate
INT16	apptype.h	/^typedef short					INT16;$/;"	t
INT32	apptype.h	/^typedef int						INT32;$/;"	t
INT64	apptype.h	/^typedef long long				INT64;$/;"	t
IOB_12V_BIT1	jigapp.h	/^	IOB_12V_BIT1,$/;"	e	enum:__anon5
IOB_12V_BIT2	jigapp.h	/^	IOB_12V_BIT2,$/;"	e	enum:__anon5
IOB_28V_BIT1	jigapp.h	/^	IOB_28V_BIT1,$/;"	e	enum:__anon5
IOB_28V_BIT2	jigapp.h	/^	IOB_28V_BIT2,$/;"	e	enum:__anon5
IOB_33V_BIT1	jigapp.h	/^	IOB_33V_BIT1,$/;"	e	enum:__anon5
IOB_33V_BIT2	jigapp.h	/^	IOB_33V_BIT2,$/;"	e	enum:__anon5
IOB_5V_BIT1	jigapp.h	/^	IOB_5V_BIT1,$/;"	e	enum:__anon5
IOB_5V_BIT2	jigapp.h	/^	IOB_5V_BIT2,$/;"	e	enum:__anon5
IOB_FAN1_SENSOR	jigapp.h	/^	IOB_FAN1_SENSOR = 100,$/;"	e	enum:__anon5
IOB_FAN2_SENSOR	jigapp.h	/^	IOB_FAN2_SENSOR,$/;"	e	enum:__anon5
IOB_FAN3_SENSOR	jigapp.h	/^	IOB_FAN3_SENSOR,$/;"	e	enum:__anon5
IOB_FAN4_SENSOR	jigapp.h	/^	IOB_FAN4_SENSOR,$/;"	e	enum:__anon5
IOB_ID	jigapp.h	/^	IOB_ID,$/;"	e	enum:__anon5
IOB_SBC1_CARDFAIL	jigapp.h	/^	IOB_SBC1_CARDFAIL = 0,$/;"	e	enum:__anon5
IOB_SBC1_THERMAL	jigapp.h	/^	IOB_SBC1_THERMAL,$/;"	e	enum:__anon5
IOB_SBC2_CARDFAIL	jigapp.h	/^	IOB_SBC2_CARDFAIL,$/;"	e	enum:__anon5
IOB_SBC2_THERMAL	jigapp.h	/^	IOB_SBC2_THERMAL,$/;"	e	enum:__anon5
IOB_SBC3_CARDFAIL	jigapp.h	/^	IOB_SBC3_CARDFAIL,$/;"	e	enum:__anon5
IOB_SBC3_THERMAL	jigapp.h	/^	IOB_SBC3_THERMAL,$/;"	e	enum:__anon5
IOB_SBC4_CARDFAIL	jigapp.h	/^	IOB_SBC4_CARDFAIL,$/;"	e	enum:__anon5
IOB_SBC4_THERMAL	jigapp.h	/^	IOB_SBC4_THERMAL,$/;"	e	enum:__anon5
IOB_STATUS_GREEN	jigapp.h	/^	IOB_STATUS_GREEN = 200,$/;"	e	enum:__anon5
IOB_STATUS_RED	jigapp.h	/^	IOB_STATUS_RED,$/;"	e	enum:__anon5
IORegister	AP471/AP471.h	/^  uint32_t IORegister[3];		\/* Bits 15:0 *\/$/;"	m	struct:map471
IORegister	vmetech/AP471/AP471.h	/^  uint32_t IORegister[3];		\/* Bits 15:0 *\/$/;"	m	struct:map471
ISR	AP471/dev471/dev471.c	/^static struct AP471_isr_info ISR[MAX_APS];	\/* Interrupt Status Registers *\/$/;"	v	typeref:struct:AP471_isr_info	file:
ISR	vmetech/AP471/dev471/dev471.c	/^static struct AP471_isr_info ISR[MAX_APS];	\/* Interrupt Status Registers *\/$/;"	v	typeref:struct:AP471_isr_info	file:
Init	jigapp.cpp	/^void CJigApp::Init()$/;"	f	class:CJigApp
InitAPLib	apcommon/apcommon.c	/^APSTATUS InitAPLib(void)$/;"	f
InitAPLib	vmetech/apcommon/apcommon.c	/^APSTATUS InitAPLib(void)$/;"	f
InitTerm	tty.cpp	/^void CTty::InitTerm(int baudrate, int rtscts, int cs, int canon)$/;"	f	class:CTty
InterruptHandlerThread	AP471/drvr471.c	/^void * InterruptHandlerThread(void * arg)$/;"	f
InterruptHandlerThread	vmetech/AP471/drvr471.c	/^static void InterruptHandlerThread(struct cblk471 *c_blk)$/;"	f	file:
InterruptRegister	AP471/AP471.h	/^  uint32_t InterruptRegister;		\/* Bits 15:0 *\/$/;"	m	struct:map471
InterruptRegister	apcommon/apcommon.h	/^	uint32_t InterruptRegister;	\/* Interrupt Pending\/control Register *\/$/;"	m	struct:__anon4
InterruptRegister	vmetech/AP471/AP471.h	/^  uint32_t InterruptRegister;		\/* Bits 15:0 *\/$/;"	m	struct:map471
InterruptRegister	vmetech/apcommon/apcommon.h	/^	uint32_t InterruptRegister;	\/* Interrupt Pending\/control Register *\/$/;"	m	struct:__anon2
InterruptThread	ap471.cpp	/^void CAp471::InterruptThread()$/;"	f	class:CAp471
Ioctl	dev.h	/^	virtual int Ioctl(unsigned int req, void * arg)$/;"	f	class:CDev
IsAvailablePacket	jigpkt.cpp	/^bool CJigPkt::IsAvailablePacket(unsigned char * pktbuf, unsigned int pktlen)$/;"	f	class:CJigPkt
IsLeapYear	date.cpp	/^bool CDate::IsLeapYear(INT32 year)$/;"	f	class:CDate
JIG_READY	jigapp.h	/^	JIG_READY,$/;"	e	enum:__anon5
Join	thread.cpp	/^int CThread::Join(void ** retval)$/;"	f	class:CThread
KDIR	AP471/dev471/Makefile	/^KDIR := \/lib\/modules\/$(shell uname -r)\/build # use this line for Fedora\/CentOS $/;"	m
KDIR	vmetech/AP471/dev471/Makefile	/^KDIR := \/lib\/modules\/$(shell uname -r)\/build # use this line for Fedora\/CentOS $/;"	m
LDFLAGS	Makefile	/^LDFLAGS=-s$/;"	m
LDLIBS	Makefile	/^LDLIBS=-pthread$/;"	m
LIBS	AP471/makefile	/^LIBS := -lpthread$/;"	m
LIBS	vmetech/AP471/makefile	/^LIBS := -lpthread$/;"	m
LONG	apptype.h	/^typedef long					LONG;$/;"	t
LSR_SAVE_FLAGS	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	366;"	d	file:
Listen	sock.cpp	/^int CTcpSocket::Listen(int backlog)$/;"	f	class:CTcpSocket
LocationRegister	AP471/AP471.h	/^  uint32_t LocationRegister;		\/* Bits 15:0 *\/$/;"	m	struct:map471
LocationRegister	vmetech/AP471/AP471.h	/^  uint32_t LocationRegister;		\/* Bits 15:0 *\/$/;"	m	struct:map471
Lock	thread.cpp	/^bool CMutex::Lock()$/;"	f	class:CMutex
MAJOR_NUM	AP471/dev471/dev471.c	64;"	d	file:
MAJOR_NUM	vmetech/AP471/dev471/dev471.c	64;"	d	file:
MASK	AP471/AP471.h	64;"	d
MASK	vmetech/AP471/AP471.h	64;"	d
MAX	jigapp.cpp	2252;"	d	file:
MAX_APS	apcommon/apcommon.h	50;"	d
MAX_APS	vmetech/apcommon/apcommon.h	50;"	d
MAX_CONFIG_LENGTH	config.cpp	9;"	d	file:
MM	date.h	/^	UINT32 MM;$/;"	m	class:CDate
MODCFLAGS	AP471/makefile	/^MODCFLAGS := -Wall$/;"	m
MODCFLAGS	vmetech/AP471/makefile	/^MODCFLAGS := -Wall$/;"	m
MODULE	AP471/dev471/Makefile	/^MODULE := $(TARGET).ko$/;"	m
MODULE	vmetech/AP471/dev471/Makefile	/^MODULE := $(TARGET).ko$/;"	m
MSR_SAVE_FLAGS	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	364;"	d	file:
MaskRegStat	AP471/AP471.h	/^  uint32_t MaskRegStat[3];             \/* Bits 15:0 *\/$/;"	m	struct:sblk471
MaskRegStat	vmetech/AP471/AP471.h	/^  uint32_t MaskRegStat[3];             \/* Bits 15:0 *\/$/;"	m	struct:sblk471
Min	date.cpp	/^INT32 CDate::Min()$/;"	f	class:CDate
NAMES	AP471/dev471/Makefile	/^NAMES := dev471$/;"	m
NAMES	vmetech/AP471/dev471/Makefile	/^NAMES := dev471$/;"	m
NR_IRQ_HASH	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	404;"	d	file:
NR_PORTS	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	99;"	d	file:
Name	file.cpp	/^const char * CFile::Name()$/;"	f	class:CFile
NextDay	date.cpp	/^CDate CDate::NextDay(INT32 year, INT32 mon, INT32 day)$/;"	f	class:CDate
OBJS	AP471/dev471/Makefile	/^OBJS  := $(addsuffix .o, $(NAMES))$/;"	m
OBJS	Makefile	/^OBJS=main.o sock.o thread.o commpkt.o jigpkt.o str.o file.o config.o tty.o ap471.o$/;"	m
OBJS	vmetech/AP471/dev471/Makefile	/^OBJS  := $(addsuffix .o, $(NAMES))$/;"	m
OBJS_AP471	Makefile	/^OBJS_AP471=.\/AP471\/apcommon.o .\/AP471\/cnfg471.o .\/AP471\/rpnt471.o .\/AP471\/rsts471.o .\/AP471\/wpnt471.o .\/AP471\/wprt471.o .\/AP471\/rprt471.o$/;"	m
OCC_GPIO1	jigapp.h	/^	OCC_GPIO1 = 204,$/;"	e	enum:__anon5
OCC_GPIO2	jigapp.h	/^	OCC_GPIO2,$/;"	e	enum:__anon5
OCC_GPIO3	jigapp.h	/^	OCC_GPIO3,$/;"	e	enum:__anon5
OCC_GPIO4	jigapp.h	/^	OCC_GPIO4,$/;"	e	enum:__anon5
OnReadTtyIobRs232_1	jigapp.cpp	/^void CJigApp::OnReadTtyIobRs232_1(unsigned char * pktbuf, unsigned int buflen)$/;"	f	class:CJigApp
OnReadTtyIobRs232_2	jigapp.cpp	/^void CJigApp::OnReadTtyIobRs232_2(unsigned char * pktbuf, unsigned int buflen)$/;"	f	class:CJigApp
OnReadTtyIobRs422_1	jigapp.cpp	/^void CJigApp::OnReadTtyIobRs422_1(unsigned char * pktbuf, unsigned int buflen)$/;"	f	class:CJigApp
OnReadTtyIobRs422_2	jigapp.cpp	/^void CJigApp::OnReadTtyIobRs422_2(unsigned char * pktbuf, unsigned int buflen)$/;"	f	class:CJigApp
OnReadTtyIobRs422_3	jigapp.cpp	/^void CJigApp::OnReadTtyIobRs422_3(unsigned char * pktbuf, unsigned int buflen)$/;"	f	class:CJigApp
OnReadTtyMccRs232_1	jigapp.cpp	/^void CJigApp::OnReadTtyMccRs232_1(unsigned char * pktbuf, unsigned int buflen)$/;"	f	class:CJigApp
OnReadTtyMccRs232_2	jigapp.cpp	/^void CJigApp::OnReadTtyMccRs232_2(unsigned char * pktbuf, unsigned int buflen)$/;"	f	class:CJigApp
OnReadTtyMccRs422	jigapp.cpp	/^void CJigApp::OnReadTtyMccRs422(unsigned char * pktbuf, unsigned int buflen)$/;"	f	class:CJigApp
OnReadTtyOccRs232_1	jigapp.cpp	/^void CJigApp::OnReadTtyOccRs232_1(unsigned char * pktbuf, unsigned int buflen)$/;"	f	class:CJigApp
OnReadTtyOccRs232_2	jigapp.cpp	/^void CJigApp::OnReadTtyOccRs232_2(unsigned char * pktbuf, unsigned int buflen)$/;"	f	class:CJigApp
OnReadTtyOccRs422	jigapp.cpp	/^void CJigApp::OnReadTtyOccRs422(unsigned char * pktbuf, unsigned int buflen)$/;"	f	class:CJigApp
OnReadTtyS0	jigapp.cpp	/^void CJigApp::OnReadTtyS0(unsigned char * pktbuf, unsigned int buflen)$/;"	f	class:CJigApp
OnReadTtyTccRs232_1	jigapp.cpp	/^void CJigApp::OnReadTtyTccRs232_1(unsigned char * pktbuf, unsigned int buflen)$/;"	f	class:CJigApp
OnReadTtyTccRs232_2	jigapp.cpp	/^void CJigApp::OnReadTtyTccRs232_2(unsigned char * pktbuf, unsigned int buflen)$/;"	f	class:CJigApp
OnReadTtyTccRs422	jigapp.cpp	/^void CJigApp::OnReadTtyTccRs422(unsigned char * pktbuf, unsigned int buflen)$/;"	f	class:CJigApp
OnRecvBit1	jigapp.cpp	/^void CJigApp::OnRecvBit1(CTcpSocket * sock, unsigned char * pktbuf, unsigned int pktlen)$/;"	f	class:CJigApp
OnRecvBit2	jigapp.cpp	/^void CJigApp::OnRecvBit2(CTcpSocket * sock, unsigned char * pktbuf, unsigned int pktlen)$/;"	f	class:CJigApp
OnRecvBit3	jigapp.cpp	/^void CJigApp::OnRecvBit3(CTcpSocket * sock, unsigned char * pktbuf, unsigned int pktlen)$/;"	f	class:CJigApp
OnRecvBit4	jigapp.cpp	/^void CJigApp::OnRecvBit4(CTcpSocket * sock, unsigned char * pktbuf, unsigned int pktlen)$/;"	f	class:CJigApp
OnRecvIob12v	jigapp.cpp	/^void CJigApp::OnRecvIob12v(CTcpSocket * sock, unsigned char * pktbuf, unsigned int pktlen)$/;"	f	class:CJigApp
OnRecvIobDiscreateInputHigh	jigapp.cpp	/^void CJigApp::OnRecvIobDiscreateInputHigh(CTcpSocket * sock, unsigned char * pktbuf, unsigned int pktlen)$/;"	f	class:CJigApp
OnRecvIobDiscreateInputLow	jigapp.cpp	/^void CJigApp::OnRecvIobDiscreateInputLow(CTcpSocket * sock, unsigned char * pktbuf, unsigned int pktlen)$/;"	f	class:CJigApp
OnRecvIobDiscreateOutputHigh	jigapp.cpp	/^void CJigApp::OnRecvIobDiscreateOutputHigh(CTcpSocket * sock, unsigned char * pktbuf, unsigned int pktlen)$/;"	f	class:CJigApp
OnRecvIobDiscreateOutputLow	jigapp.cpp	/^void CJigApp::OnRecvIobDiscreateOutputLow(CTcpSocket * sock, unsigned char * pktbuf, unsigned int pktlen)$/;"	f	class:CJigApp
OnRecvIobRs2321	jigapp.cpp	/^void CJigApp::OnRecvIobRs2321(CTcpSocket * sock, unsigned char * pktbuf, unsigned int pktlen)$/;"	f	class:CJigApp
OnRecvIobRs2322	jigapp.cpp	/^void CJigApp::OnRecvIobRs2322(CTcpSocket * sock, unsigned char * pktbuf, unsigned int pktlen)$/;"	f	class:CJigApp
OnRecvIobRs4221	jigapp.cpp	/^void CJigApp::OnRecvIobRs4221(CTcpSocket * sock, unsigned char * pktbuf, unsigned int pktlen)$/;"	f	class:CJigApp
OnRecvIobRs4222	jigapp.cpp	/^void CJigApp::OnRecvIobRs4222(CTcpSocket * sock, unsigned char * pktbuf, unsigned int pktlen)$/;"	f	class:CJigApp
OnRecvIobRs4223	jigapp.cpp	/^void CJigApp::OnRecvIobRs4223(CTcpSocket * sock, unsigned char * pktbuf, unsigned int pktlen)$/;"	f	class:CJigApp
OnRecvMccGpioInput	jigapp.cpp	/^void CJigApp::OnRecvMccGpioInput(CTcpSocket * sock, unsigned char * pktbuf, unsigned int pktlen)$/;"	f	class:CJigApp
OnRecvMccGpioInputReady	jigapp.cpp	/^void CJigApp::OnRecvMccGpioInputReady(CTcpSocket * sock, unsigned char * pktbuf, unsigned int pktlen)$/;"	f	class:CJigApp
OnRecvMccRs2321	jigapp.cpp	/^void CJigApp::OnRecvMccRs2321(CTcpSocket * sock, unsigned char * pktbuf, unsigned int pktlen)$/;"	f	class:CJigApp
OnRecvMccRs2322	jigapp.cpp	/^void CJigApp::OnRecvMccRs2322(CTcpSocket * sock, unsigned char * pktbuf, unsigned int pktlen)$/;"	f	class:CJigApp
OnRecvMccRs422	jigapp.cpp	/^void CJigApp::OnRecvMccRs422(CTcpSocket * sock, unsigned char * pktbuf, unsigned int pktlen)$/;"	f	class:CJigApp
OnRecvOccGpio1	jigapp.cpp	/^void CJigApp::OnRecvOccGpio1(CTcpSocket * sock, unsigned char * pktbuf, unsigned int pktlen)$/;"	f	class:CJigApp
OnRecvOccGpio1Ready	jigapp.cpp	/^void CJigApp::OnRecvOccGpio1Ready(CTcpSocket * sock, unsigned char * pktbuf, unsigned int pktlen)$/;"	f	class:CJigApp
OnRecvOccGpio2	jigapp.cpp	/^void CJigApp::OnRecvOccGpio2(CTcpSocket * sock, unsigned char * pktbuf, unsigned int pktlen)$/;"	f	class:CJigApp
OnRecvOccGpio2Ready	jigapp.cpp	/^void CJigApp::OnRecvOccGpio2Ready(CTcpSocket * sock, unsigned char * pktbuf, unsigned int pktlen)$/;"	f	class:CJigApp
OnRecvOccGpio3	jigapp.cpp	/^void CJigApp::OnRecvOccGpio3(CTcpSocket * sock, unsigned char * pktbuf, unsigned int pktlen)$/;"	f	class:CJigApp
OnRecvOccGpio3Ready	jigapp.cpp	/^void CJigApp::OnRecvOccGpio3Ready(CTcpSocket * sock, unsigned char * pktbuf, unsigned int pktlen)$/;"	f	class:CJigApp
OnRecvOccGpio4	jigapp.cpp	/^void CJigApp::OnRecvOccGpio4(CTcpSocket * sock, unsigned char * pktbuf, unsigned int pktlen)$/;"	f	class:CJigApp
OnRecvOccGpio4Ready	jigapp.cpp	/^void CJigApp::OnRecvOccGpio4Ready(CTcpSocket * sock, unsigned char * pktbuf, unsigned int pktlen)$/;"	f	class:CJigApp
OnRecvOccGpioInput	jigapp.cpp	/^void CJigApp::OnRecvOccGpioInput(CTcpSocket * sock, unsigned char * pktbuf, unsigned int pktlen)$/;"	f	class:CJigApp
OnRecvOccGpioInputReady	jigapp.cpp	/^void CJigApp::OnRecvOccGpioInputReady(CTcpSocket * sock, unsigned char * pktbuf, unsigned int pktlen)$/;"	f	class:CJigApp
OnRecvOccRs2321	jigapp.cpp	/^void CJigApp::OnRecvOccRs2321(CTcpSocket * sock, unsigned char * pktbuf, unsigned int pktlen)$/;"	f	class:CJigApp
OnRecvOccRs2322	jigapp.cpp	/^void CJigApp::OnRecvOccRs2322(CTcpSocket * sock, unsigned char * pktbuf, unsigned int pktlen)$/;"	f	class:CJigApp
OnRecvOccRs422	jigapp.cpp	/^void CJigApp::OnRecvOccRs422(CTcpSocket * sock, unsigned char * pktbuf, unsigned int pktlen)$/;"	f	class:CJigApp
OnRecvTccBit	jigapp.cpp	/^void CJigApp::OnRecvTccBit(CTcpSocket * sock, unsigned char * pktbuf, unsigned int pktlen)$/;"	f	class:CJigApp
OnRecvTccBitReady	jigapp.cpp	/^void CJigApp::OnRecvTccBitReady(CTcpSocket * sock, unsigned char * pktbuf, unsigned int pktlen)$/;"	f	class:CJigApp
OnRecvTccId	jigapp.cpp	/^void CJigApp::OnRecvTccId(CTcpSocket * sock, unsigned char * pktbuf, unsigned int pktlen)$/;"	f	class:CJigApp
OnRecvTccIdReady	jigapp.cpp	/^void CJigApp::OnRecvTccIdReady(CTcpSocket * sock, unsigned char * pktbuf, unsigned int pktlen)$/;"	f	class:CJigApp
OnRecvTccPcie	jigapp.cpp	/^void CJigApp::OnRecvTccPcie(CTcpSocket * sock, unsigned char * pktbuf, unsigned int pktlen)$/;"	f	class:CJigApp
OnRecvTccRs2321	jigapp.cpp	/^void CJigApp::OnRecvTccRs2321(CTcpSocket * sock, unsigned char * pktbuf, unsigned int pktlen)$/;"	f	class:CJigApp
OnRecvTccRs2322	jigapp.cpp	/^void CJigApp::OnRecvTccRs2322(CTcpSocket * sock, unsigned char * pktbuf, unsigned int pktlen)$/;"	f	class:CJigApp
OnRecvTccRs422	jigapp.cpp	/^void CJigApp::OnRecvTccRs422(CTcpSocket * sock, unsigned char * pktbuf, unsigned int pktlen)$/;"	f	class:CJigApp
OnRecvTccThermal	jigapp.cpp	/^void CJigApp::OnRecvTccThermal(CTcpSocket * sock, unsigned char * pktbuf, unsigned int pktlen)$/;"	f	class:CJigApp
OnRecvTccThermalReady	jigapp.cpp	/^void CJigApp::OnRecvTccThermalReady(CTcpSocket * sock, unsigned char * pktbuf, unsigned int pktlen)$/;"	f	class:CJigApp
Open	ap471.cpp	/^bool CAp471::Open()$/;"	f	class:CAp471
Open	dev.h	/^	virtual bool Open(const char * path, int flag = O_RDWR)$/;"	f	class:CDev
Open	file.cpp	/^bool CFile::Open(const char * path, const char * mode)$/;"	f	class:CFile
Open	sock.cpp	/^int CSocket::Open(int domain, int type, int protocol)$/;"	f	class:CSocket
Open	sock.cpp	/^int CTcpSocket::Open()$/;"	f	class:CTcpSocket
Open	sock.cpp	/^int CUdpSocket::Open()$/;"	f	class:CUdpSocket
Open	tty.cpp	/^bool CTty::Open(const char * path, int flag)$/;"	f	class:CTty
PASS_LIMIT	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	356;"	d	file:
PCI_NUM_BAR_RESOURCES	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	156;"	d	file:
PING_PKT_SIZE	sock.cpp	12;"	d	file:
PKT_DATA_OFFSET	jigpkt.h	/^	PKT_DATA_OFFSET = 12,$/;"	e	enum:_PKT_VAL
PM_BIT1	jigpkt.h	/^	PM_BIT1 = 5000,$/;"	e	enum:_PKT_MSG
PM_BIT2	jigpkt.h	/^	PM_BIT2,$/;"	e	enum:_PKT_MSG
PM_BIT3	jigpkt.h	/^	PM_BIT3,$/;"	e	enum:_PKT_MSG
PM_BIT4	jigpkt.h	/^	PM_BIT4,$/;"	e	enum:_PKT_MSG
PM_END	jigpkt.h	/^	PM_END = 0,$/;"	e	enum:_PKT_MSG
PM_IOB_12V	jigpkt.h	/^	PM_IOB_12V,$/;"	e	enum:_PKT_MSG
PM_IOB_DISCREATE_INPUT_HIGH	jigpkt.h	/^	PM_IOB_DISCREATE_INPUT_HIGH,$/;"	e	enum:_PKT_MSG
PM_IOB_DISCREATE_INPUT_LOW	jigpkt.h	/^	PM_IOB_DISCREATE_INPUT_LOW,$/;"	e	enum:_PKT_MSG
PM_IOB_DISCREATE_OUTPUT_HIGH	jigpkt.h	/^	PM_IOB_DISCREATE_OUTPUT_HIGH,$/;"	e	enum:_PKT_MSG
PM_IOB_DISCREATE_OUTPUT_LOW	jigpkt.h	/^	PM_IOB_DISCREATE_OUTPUT_LOW,$/;"	e	enum:_PKT_MSG
PM_IOB_END	jigpkt.h	/^	PM_IOB_END,$/;"	e	enum:_PKT_MSG
PM_IOB_RS232_1	jigpkt.h	/^	PM_IOB_RS232_1,$/;"	e	enum:_PKT_MSG
PM_IOB_RS232_2	jigpkt.h	/^	PM_IOB_RS232_2,$/;"	e	enum:_PKT_MSG
PM_IOB_RS422_1	jigpkt.h	/^	PM_IOB_RS422_1,$/;"	e	enum:_PKT_MSG
PM_IOB_RS422_2	jigpkt.h	/^	PM_IOB_RS422_2,$/;"	e	enum:_PKT_MSG
PM_IOB_RS422_3	jigpkt.h	/^	PM_IOB_RS422_3,$/;"	e	enum:_PKT_MSG
PM_MCC_GPIO_INPUT	jigpkt.h	/^	PM_MCC_GPIO_INPUT,$/;"	e	enum:_PKT_MSG
PM_MCC_GPIO_INPUT_READY	jigpkt.h	/^	PM_MCC_GPIO_INPUT_READY,$/;"	e	enum:_PKT_MSG
PM_MCC_RS232_1	jigpkt.h	/^	PM_MCC_RS232_1 = 1,$/;"	e	enum:_PKT_MSG
PM_MCC_RS232_2	jigpkt.h	/^	PM_MCC_RS232_2,$/;"	e	enum:_PKT_MSG
PM_MCC_RS422	jigpkt.h	/^	PM_MCC_RS422,$/;"	e	enum:_PKT_MSG
PM_OCC_GPIO_1	jigpkt.h	/^	PM_OCC_GPIO_1,$/;"	e	enum:_PKT_MSG
PM_OCC_GPIO_1_READY	jigpkt.h	/^	PM_OCC_GPIO_1_READY,$/;"	e	enum:_PKT_MSG
PM_OCC_GPIO_2	jigpkt.h	/^	PM_OCC_GPIO_2,$/;"	e	enum:_PKT_MSG
PM_OCC_GPIO_2_READY	jigpkt.h	/^	PM_OCC_GPIO_2_READY,$/;"	e	enum:_PKT_MSG
PM_OCC_GPIO_3	jigpkt.h	/^	PM_OCC_GPIO_3,$/;"	e	enum:_PKT_MSG
PM_OCC_GPIO_3_READY	jigpkt.h	/^	PM_OCC_GPIO_3_READY,$/;"	e	enum:_PKT_MSG
PM_OCC_GPIO_4	jigpkt.h	/^	PM_OCC_GPIO_4,$/;"	e	enum:_PKT_MSG
PM_OCC_GPIO_4_READY	jigpkt.h	/^	PM_OCC_GPIO_4_READY,$/;"	e	enum:_PKT_MSG
PM_OCC_GPIO_INPUT	jigpkt.h	/^	PM_OCC_GPIO_INPUT,$/;"	e	enum:_PKT_MSG
PM_OCC_GPIO_INPUT_READY	jigpkt.h	/^	PM_OCC_GPIO_INPUT_READY,$/;"	e	enum:_PKT_MSG
PM_OCC_RS232_1	jigpkt.h	/^	PM_OCC_RS232_1,$/;"	e	enum:_PKT_MSG
PM_OCC_RS232_2	jigpkt.h	/^	PM_OCC_RS232_2,$/;"	e	enum:_PKT_MSG
PM_OCC_RS422	jigpkt.h	/^	PM_OCC_RS422,$/;"	e	enum:_PKT_MSG
PM_SHUTDOWN	jigpkt.h	/^	PM_SHUTDOWN,$/;"	e	enum:_PKT_MSG
PM_TCC_BIT	jigpkt.h	/^	PM_TCC_BIT,$/;"	e	enum:_PKT_MSG
PM_TCC_BIT_READY	jigpkt.h	/^	PM_TCC_BIT_READY,$/;"	e	enum:_PKT_MSG
PM_TCC_ID	jigpkt.h	/^	PM_TCC_ID,$/;"	e	enum:_PKT_MSG
PM_TCC_ID_READY	jigpkt.h	/^	PM_TCC_ID_READY,$/;"	e	enum:_PKT_MSG
PM_TCC_PCIE	jigpkt.h	/^	PM_TCC_PCIE,$/;"	e	enum:_PKT_MSG
PM_TCC_RS232_1	jigpkt.h	/^	PM_TCC_RS232_1,$/;"	e	enum:_PKT_MSG
PM_TCC_RS232_2	jigpkt.h	/^	PM_TCC_RS232_2,$/;"	e	enum:_PKT_MSG
PM_TCC_RS422	jigpkt.h	/^	PM_TCC_RS422,$/;"	e	enum:_PKT_MSG
PM_TCC_THERMAL	jigpkt.h	/^	PM_TCC_THERMAL,$/;"	e	enum:_PKT_MSG
PM_TCC_THERMAL_READY	jigpkt.h	/^	PM_TCC_THERMAL_READY,$/;"	e	enum:_PKT_MSG
PORT_MAX_XR	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	411;"	d	file:
PWD	AP471/dev471/Makefile	/^PWD := $(shell pwd)$/;"	m
PWD	vmetech/AP471/dev471/Makefile	/^PWD := $(shell pwd)$/;"	m
PluseThread	jigapp.cpp	/^void CJigApp::PluseThread()$/;"	f	class:CJigApp
PutString	file.cpp	/^size_t CTextFile::PutString(const char * ptr, size_t size)$/;"	f	class:CTextFile
Read	dev.h	/^	virtual int Read(unsigned char * buf, unsigned int buflen)$/;"	f	class:CDev
Read	file.cpp	/^size_t CFile::Read(char * ptr, size_t size)$/;"	f	class:CFile
Recv	sock.cpp	/^int CTcpSocket::Recv(void * buf, size_t len, int flags)$/;"	f	class:CTcpSocket
RecvFrom	sock.cpp	/^int CUdpSocket::RecvFrom(void * buf, size_t len, int flags, string &from_ip)$/;"	f	class:CUdpSocket
RecvThread	jigapp.cpp	/^void CJigApp::RecvThread()$/;"	f	class:CJigApp
Rename	file.cpp	/^int CFile::Rename(const char * old, const char * ch)$/;"	f	class:CFile
Replace	str.cpp	/^string & CString::Replace(string & str, const char * old, const char * ch)$/;"	f	class:CString
Reserved1	AP471/AP471.h	/^  unsigned char Reserved1[0x0188];$/;"	m	struct:map471
Reserved1	vmetech/AP471/AP471.h	/^  unsigned char Reserved1[0x0188];$/;"	m	struct:map471
Run	jigapp.cpp	/^bool CJigApp::Run()$/;"	f	class:CJigApp
RunBit	jigapp.cpp	/^void CJigApp::RunBit()$/;"	f	class:CJigApp
SERIALEXAR_SHARE_IRQS	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	338;"	d	file:
SERIALXR_CONSOLE	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	2012;"	d	file:
SOCK_RMEM_MAX	sock.h	11;"	d
SOCK_WMEM_MAX	sock.h	14;"	d
SRCS	Makefile	/^SRCS=$(OBJS:.o=.c)$/;"	m
START_CODE	jigpkt.h	/^	START_CODE = 0xFFAF0000,$/;"	e	enum:_PKT_VAL
S_OK	apcommon/apcommon.h	102;"	d
S_OK	vmetech/apcommon/apcommon.h	102;"	d
Sec	date.cpp	/^INT32 CDate::Sec()$/;"	f	class:CDate
SelectTtyThread	jigapp.cpp	/^void CJigApp::SelectTtyThread()$/;"	f	class:CJigApp
Send	sock.cpp	/^int CTcpSocket::Send(void * buf, size_t len, int flags)$/;"	f	class:CTcpSocket
SendJigMsg	jigapp.cpp	/^void CJigApp::SendJigMsg(CTcpSocket * sock, unsigned int msgid, unsigned char * data, unsigned int datalen)$/;"	f	class:CJigApp
SendJigMsg	jigapp.cpp	/^void CJigApp::SendJigMsg(CTcpSocket * sock, unsigned int msgid, unsigned char ok)$/;"	f	class:CJigApp
SendJigMsg	jigapp.cpp	/^void CJigApp::SendJigMsg(unsigned int msgid, unsigned char * data, unsigned int datalen)$/;"	f	class:CJigApp
SendJigMsg	jigapp.cpp	/^void CJigApp::SendJigMsg(unsigned int msgid, unsigned char ok)$/;"	f	class:CJigApp
SendPacket	jigapp.cpp	/^void CJigApp::SendPacket(CTcpSocket * sock, unsigned char * pktbuf, unsigned int pktlen)$/;"	f	class:CJigApp
SendPacket	jigapp.cpp	/^void CJigApp::SendPacket(unsigned char * pktbuf, unsigned int pktlen)$/;"	f	class:CJigApp
SendTo	sock.cpp	/^int CUdpSocket::SendTo(void * buf, size_t len, int flags, string to_ip, int to_port)$/;"	f	class:CUdpSocket
SetAt	ap471.cpp	/^BOOL CAp471::SetAt(UINT16 port, UINT16 point, UINT16 val)$/;"	f	class:CAp471
SetAt	commpkt.cpp	/^void CCommPkt::SetAt(unsigned int idx, unsigned char data)$/;"	f	class:CCommPkt
SetBlockMode	sock.cpp	/^int CSocket::SetBlockMode(bool block)$/;"	f	class:CSocket
SetConfig	config.cpp	/^bool CConfig::SetConfig(const char * path, const char * cfgname, const char * cfgval)$/;"	f	class:CConfig
SetDataLength	jigpkt.cpp	/^void CJigPkt::SetDataLength(unsigned int datalen)$/;"	f	class:CJigPkt
SetDataVal	jigpkt.cpp	/^void CJigPkt::SetDataVal(unsigned char data, unsigned int data_no)$/;"	f	class:CJigPkt
SetDate	date.cpp	/^void CDate::SetDate(INT32 year, INT32 mon, INT32 day, INT32 hour, INT32 minute, INT32 second)$/;"	f	class:CDate
SetGpio	jigapp.cpp	/^void CJigApp::SetGpio(UINT32 pin_name, UINT16 onoff)$/;"	f	class:CJigApp
SetIobGpio	jigapp.cpp	/^void CJigApp::SetIobGpio(UINT32 pin_name, UINT16 onoff)$/;"	f	class:CJigApp
SetIobGpioInputHigh	jigapp.cpp	/^BOOL CJigApp::SetIobGpioInputHigh()$/;"	f	class:CJigApp
SetIobGpioInputLow	jigapp.cpp	/^BOOL CJigApp::SetIobGpioInputLow()$/;"	f	class:CJigApp
SetLength	commpkt.cpp	/^void CCommPkt::SetLength(unsigned int pktlen)$/;"	f	class:CCommPkt
SetMask	ap471.cpp	/^BOOL CAp471::SetMask(UINT16 port, UINT16 point, UINT16 val)$/;"	f	class:CAp471
SetMask	ap471.cpp	/^BOOL CAp471::SetMask(UINT16 port, UINT16 val)$/;"	f	class:CAp471
SetMcuResponse	jigapp.cpp	/^void CJigApp::SetMcuResponse(unsigned char * pktbuf, unsigned int pktlen)$/;"	f	class:CJigApp
SetMsgID	jigpkt.cpp	/^void CJigPkt::SetMsgID(unsigned int msgid)$/;"	f	class:CJigPkt
SetOccGpio	jigapp.cpp	/^void CJigApp::SetOccGpio(UINT32 pin_name, UINT16 onoff)$/;"	f	class:CJigApp
SetPort	ap471.cpp	/^BOOL CAp471::SetPort(UINT16 port, UINT16 val)$/;"	f	class:CAp471
SetReadyLed	jigapp.cpp	/^void CJigApp::SetReadyLed(UINT16 onoff)$/;"	f	class:CJigApp
SetSockOpt	sock.cpp	/^int CSocket::SetSockOpt(int level, int optname, int optval)$/;"	f	class:CSocket
SetSystemDate	date.cpp	/^INT32 CDate::SetSystemDate(UINT32 nYear, UINT32 nMonth, UINT32 nDay, UINT32 nHour, UINT32 nMinute, UINT32 nSecond)$/;"	f	class:CDate
SetTccGpio	jigapp.cpp	/^void CJigApp::SetTccGpio(UINT32 pin_name, UINT16 onoff)$/;"	f	class:CJigApp
Shutdown	sock.cpp	/^int CSocket::Shutdown(int how)$/;"	f	class:CSocket
Size	file.cpp	/^int CFile::Size(const char * path)$/;"	f	class:CFile
SoftwareReset	AP471/AP471.h	/^  uint32_t SoftwareReset;		\/* Bit 0 *\/$/;"	m	struct:map471
SoftwareReset	vmetech/AP471/AP471.h	/^  uint32_t SoftwareReset;		\/* Bit 0 *\/$/;"	m	struct:map471
SpanOfDays	date.cpp	/^INT32 CDate::SpanOfDays(CDate start, CDate end)$/;"	f	class:CDate
SpanTime	date.cpp	/^FLOAT64 CDate::SpanTime(CDate start, CDate end)$/;"	f	class:CDate
Status	AP471/AP471.h	/^  uint32_t Status;$/;"	m	struct:AP471_isr_info
Status	vmetech/AP471/AP471.h	/^  uint32_t Status;$/;"	m	struct:AP471_isr_info
Str2Bin	sock.cpp	/^in_addr_t CIpAddress::Str2Bin(string & addr)$/;"	f	class:CIpAddress
SwapBytes	apcommon/apcommon.c	/^word SwapBytes( word v )             $/;"	f
SwapBytes	vmetech/apcommon/apcommon.c	/^word SwapBytes( word v )             $/;"	f
SwapLong	apcommon/apcommon.c	/^long SwapLong( long v )             $/;"	f
SwapLong	vmetech/apcommon/apcommon.c	/^long SwapLong( long v )             $/;"	f
TARGET	AP471/dev471/Makefile	/^TARGET := ap471$/;"	m
TARGET	Makefile	/^TARGET=jigd$/;"	m
TARGET	vmetech/AP471/dev471/Makefile	/^TARGET := ap471$/;"	m
TCC_GPIO1	jigapp.h	/^	TCC_GPIO1 = 108,$/;"	e	enum:__anon5
TCC_GPIO2	jigapp.h	/^	TCC_GPIO2,$/;"	e	enum:__anon5
TCC_GPIO3	jigapp.h	/^	TCC_GPIO3,$/;"	e	enum:__anon5
TCC_GPIO4	jigapp.h	/^	TCC_GPIO4,$/;"	e	enum:__anon5
TRUE	apcommon/apcommon.h	78;"	d
TRUE	vmetech/apcommon/apcommon.h	78;"	d
ThisMonth	date.cpp	/^INT32 CDate::ThisMonth()$/;"	f	class:CDate
ThisYear	date.cpp	/^INT32 CDate::ThisYear()$/;"	f	class:CDate
Today	date.cpp	/^INT32 CDate::Today()$/;"	f	class:CDate
Trim	str.cpp	/^string & CString::Trim(string & str)$/;"	f	class:CString
UART_17V35X_RX_OFFSET	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	141;"	d	file:
UART_17V35X_TX_OFFSET	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	142;"	d	file:
UINT16	apptype.h	/^typedef unsigned short			UINT16;$/;"	t
UINT32	apptype.h	/^typedef unsigned int			UINT32;$/;"	t
UINT64	apptype.h	/^typedef unsigned long long		UINT64;$/;"	t
ULONG32	apptype.h	/^typedef unsigned long			ULONG32;$/;"	t
Unlock	thread.cpp	/^bool CMutex::Unlock()$/;"	f	class:CMutex
VENDOR_ID	apcommon/apcommon.h	49;"	d
VENDOR_ID	vmetech/apcommon/apcommon.h	49;"	d
WORD	apcommon/apcommon.h	/^typedef short WORD;$/;"	t
WORD	vmetech/apcommon/apcommon.h	/^typedef short WORD;$/;"	t
Write	dev.h	/^	virtual int Write(const unsigned char * buf, unsigned int buflen)$/;"	f	class:CDev
Write	file.cpp	/^size_t CFile::Write(const char * ptr, size_t size)$/;"	f	class:CFile
WriteMask	AP471/AP471.h	/^  uint32_t WriteMask[3];      \/* output port mask registers *\/$/;"	m	struct:cblk471
WriteMask	vmetech/AP471/AP471.h	/^  uint32_t WriteMask[3];      \/* output port mask registers *\/$/;"	m	struct:cblk471
WriteMaskReg	AP471/AP471.h	/^  uint32_t WriteMaskReg[3];             \/* Bits 15:0 *\/$/;"	m	struct:map471
WriteMaskReg	vmetech/AP471/AP471.h	/^  uint32_t WriteMaskReg[3];             \/* Bits 15:0 *\/$/;"	m	struct:map471
XDAC_AddressReg	AP471/AP471.h	/^  uint32_t XDAC_AddressReg;$/;"	m	struct:map471
XDAC_AddressReg	vmetech/AP471/AP471.h	/^  uint32_t XDAC_AddressReg;$/;"	m	struct:map471
XDAC_StatusControl	AP471/AP471.h	/^  uint32_t XDAC_StatusControl;$/;"	m	struct:map471
XDAC_StatusControl	vmetech/AP471/AP471.h	/^  uint32_t XDAC_StatusControl;$/;"	m	struct:map471
XRPCI25x_TYPE	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	413;"	d	file:
XRPCIe_TYPE	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	412;"	d	file:
XR_17V35X_4XMODE	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	151;"	d	file:
XR_17V35X_8XMODE	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	150;"	d	file:
XR_17V35X_EXTENDED_EFR	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	119;"	d	file:
XR_17V35X_EXTENDED_FCTR	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	118;"	d	file:
XR_17V35X_EXTENDED_RXTRG	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	123;"	d	file:
XR_17V35X_EXTENDED_TXTRG	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	121;"	d	file:
XR_17V35X_FCTR_RTS_8DELAY	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	127;"	d	file:
XR_17V35X_FCTR_TRGD	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	128;"	d	file:
XR_17V35X_IER_CTSDSR	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	145;"	d	file:
XR_17V35X_IER_RTSDTR	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	144;"	d	file:
XR_17V35X_INT0	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	147;"	d	file:
XR_17V35X_REGB	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	148;"	d	file:
XR_17V35X_RXFIFO_CNT	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	122;"	d	file:
XR_17V35X_TXFIFO_CNT	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	120;"	d	file:
XR_17V35X_UART_DLD	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	116;"	d	file:
XR_17V35X_UART_MSR	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	117;"	d	file:
XR_17V35X_UART_XOFF1	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	125;"	d	file:
XR_17V35X_UART_XOFF2	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	124;"	d	file:
XR_17V35X_UART_XON1	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	126;"	d	file:
XR_17V35x_FCTR_RS485	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	129;"	d	file:
XR_17V35x_MPIO3T_15_8	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	135;"	d	file:
XR_17V35x_MPIO3T_7_0	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	132;"	d	file:
XR_17V35x_MPIOLVL_15_8	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	134;"	d	file:
XR_17V35x_MPIOLVL_7_0	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	131;"	d	file:
XR_17V35x_MPIOSEL_15_8	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	136;"	d	file:
XR_17V35x_MPIOSEL_7_0	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	133;"	d	file:
XR_17v35x_UART_RHR	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	114;"	d	file:
XR_17v35x_UART_THR	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	115;"	d	file:
XR_MAJOR	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	101;"	d	file:
XR_MINOR	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	102;"	d	file:
YYYY	date.h	/^	UINT32 YYYY;$/;"	m	class:CDate
_INLINE_	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	73;"	d	file:
_PKT_MSG	jigpkt.h	/^enum _PKT_MSG$/;"	g
_PKT_VAL	jigpkt.h	/^enum _PKT_VAL$/;"	g
__devexit	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	78;"	d	file:
__devexit_p	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	79;"	d	file:
__devinit	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	77;"	d	file:
__devinitdata	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^static struct pciserial_board xrpciserial_boards[] __devinitdata = {$/;"	v	typeref:struct:xrpciserial_boards	file:
__devinitdata	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	76;"	d	file:
abWaitQueueFlag	AP471/dev471/dev471.c	/^static int abWaitQueueFlag[MAX_APS];		\/* wait queues flags *\/$/;"	v	file:
abWaitQueueFlag	vmetech/AP471/dev471/dev471.c	/^static int abWaitQueueFlag[MAX_APS];		\/* wait queues flags *\/$/;"	v	file:
accept_thread	jigapp.cpp	/^void * accept_thread(void * arg)$/;"	f
acr	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^	unsigned char		acr;$/;"	m	struct:uart_xr_port	file:
ap471_handler	AP471/dev471/dev471.c	/^ap471_handler( int irq, void *did, struct pt_regs *cpu_regs )$/;"	f	file:
ap471_handler	vmetech/AP471/dev471/dev471.c	/^ap471_handler( int irq, void *did, struct pt_regs *cpu_regs )$/;"	f	file:
ap471_ops	AP471/dev471/dev471.c	/^static struct file_operations ap471_ops = {$/;"	v	typeref:struct:file_operations	file:
ap471_ops	vmetech/AP471/dev471/dev471.c	/^static struct file_operations ap471_ops = {$/;"	v	typeref:struct:file_operations	file:
apWaitQueue	AP471/dev471/dev471.c	/^static wait_queue_head_t apWaitQueue[MAX_APS];	\/* wait queues for inputs *\/$/;"	v	file:
apWaitQueue	vmetech/AP471/dev471/dev471.c	/^static wait_queue_head_t apWaitQueue[MAX_APS];	\/* wait queues for inputs *\/$/;"	v	file:
ap_address	AP471/dev471/dev471.c	/^unsigned long ap_address[MAX_APS];$/;"	v
ap_address	vmetech/AP471/dev471/dev471.c	/^unsigned long ap_address[MAX_APS];$/;"	v
bAP	AP471/AP471.h	/^  BOOL bAP;                   \/* flag indicating board is open *\/$/;"	m	struct:cblk471
bAP	vmetech/AP471/AP471.h	/^  BOOL bAP;                   \/* flag indicating board is open *\/$/;"	m	struct:cblk471
bInitialized	AP471/AP471.h	/^  BOOL bInitialized;          \/* flag indicating ready to talk to board *\/	$/;"	m	struct:cblk471
bInitialized	apcommon/apcommon.h	/^	BOOL bInitialized;		\/* intialized flag *\/$/;"	m	struct:__anon3
bInitialized	vmetech/AP471/AP471.h	/^  BOOL bInitialized;          \/* flag indicating ready to talk to board *\/	$/;"	m	struct:cblk471
bInitialized	vmetech/apcommon/apcommon.h	/^	BOOL bInitialized;		\/* intialized flag *\/$/;"	m	struct:__anon1
bIntEnabled	apcommon/apcommon.h	/^	BOOL bIntEnabled;		\/* interrupts enabled flag *\/$/;"	m	struct:__anon3
bIntEnabled	vmetech/apcommon/apcommon.h	/^	BOOL bIntEnabled;		\/* interrupts enabled flag *\/$/;"	m	struct:__anon1
base_baud	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^	unsigned int base_baud;$/;"	m	struct:pciserial_board	file:
bd_enable	AP471/AP471.h	/^  uint32_t bd_enable;         \/* board interrupt enable register *\/$/;"	m	struct:cblk471
bd_enable	vmetech/AP471/AP471.h	/^  uint32_t bd_enable;         \/* board interrupt enable register *\/$/;"	m	struct:cblk471
board_irq	AP471/dev471/dev471.c	/^unsigned int board_irq[MAX_APS];$/;"	v
board_irq	vmetech/AP471/dev471/dev471.c	/^unsigned int board_irq[MAX_APS];$/;"	v
brd_ptr	AP471/AP471.h	/^  struct map471 *brd_ptr;     \/* base address of the I\/O board *\/$/;"	m	struct:cblk471	typeref:struct:cblk471::map471
brd_ptr	vmetech/AP471/AP471.h	/^  struct map471 *brd_ptr;     \/* base address of the I\/O board *\/$/;"	m	struct:cblk471	typeref:struct:cblk471::map471
buf	commpkt.cpp	/^unsigned char * CCommPkt::buf()$/;"	f	class:CCommPkt
bugs	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^	unsigned short		bugs;		\/* port bugs *\/$/;"	m	struct:uart_xr_port	file:
byte	apcommon/apcommon.h	/^typedef unsigned char byte;		\/* custom data type *\/$/;"	t
byte	vmetech/apcommon/apcommon.h	/^typedef unsigned char byte;		\/* custom data type *\/$/;"	t
c_buf	commpkt.cpp	/^char * CCommPkt::c_buf()$/;"	f	class:CCommPkt
capabilities	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^	unsigned short		capabilities;	\/* port capabilities *\/$/;"	m	struct:uart_xr_port	file:
cblk471	AP471/AP471.h	/^struct cblk471$/;"	s
cblk471	vmetech/AP471/AP471.h	/^struct cblk471$/;"	s
channelnum	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^	unsigned char		channelnum;$/;"	m	struct:uart_xr_port	file:
check_modem_status	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^static unsigned int check_modem_status(struct uart_xr_port *up)$/;"	f	file:
checksum	sock.cpp	/^unsigned short checksum(void * b, int len)$/;"	f
cleanup_module	AP471/dev471/dev471.c	/^cleanup_module( void )$/;"	f
cleanup_module	vmetech/AP471/dev471/dev471.c	/^cleanup_module( void )$/;"	f
cnfg471	AP471/cnfg471.c	/^void cnfg471(struct cblk471 *c_blk)$/;"	f
cnfg471	vmetech/AP471/cnfg471.c	/^void cnfg471(struct cblk471 *c_blk)$/;"	f
dbg_thread	jigapp.cpp	/^void * dbg_thread(void * arg)$/;"	f
deb_clock	AP471/AP471.h	/^  uint32_t deb_clock;         \/* debounce clock select register *\/$/;"	m	struct:cblk471
deb_clock	vmetech/AP471/AP471.h	/^  uint32_t deb_clock;         \/* debounce clock select register *\/$/;"	m	struct:cblk471
deb_control	AP471/AP471.h	/^  uint32_t deb_control[3];    \/* debounce control registers *\/$/;"	m	struct:cblk471
deb_control	vmetech/AP471/AP471.h	/^  uint32_t deb_control[3];    \/* debounce control registers *\/$/;"	m	struct:cblk471
deb_duration	AP471/AP471.h	/^  uint32_t deb_duration[3];   \/* debounce duration registers *\/$/;"	m	struct:cblk471
deb_duration	vmetech/AP471/AP471.h	/^  uint32_t deb_duration[3];   \/* debounce duration registers *\/$/;"	m	struct:cblk471
dev	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^	struct pci_dev		*dev;$/;"	m	struct:serial_private	typeref:struct:serial_private::pci_dev	file:
device	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^	u32	device;$/;"	m	struct:pci_serial_quirk	file:
device_ioctl	AP471/dev471/dev471.c	/^device_ioctl( struct file *fp, unsigned int cmd, unsigned long arg)$/;"	f	file:
device_ioctl	vmetech/AP471/dev471/dev471.c	/^device_ioctl( struct file *fp, unsigned int cmd, unsigned long arg)$/;"	f	file:
deviceid	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^	unsigned short 		deviceid;$/;"	m	struct:uart_xr_port	file:
devname	apcommon/apcommon.h	/^	char devname[64];		\/* device name *\/$/;"	m	struct:__anon3
devname	vmetech/apcommon/apcommon.h	/^	char devname[64];		\/* device name *\/$/;"	m	struct:__anon1
devnamebuf	AP471/dev471/dev471.c	/^char devnamebuf[MAX_APS][32];$/;"	v
devnamebuf	vmetech/AP471/dev471/dev471.c	/^char devnamebuf[MAX_APS][32];$/;"	v
dfl_xmit_fifo_size	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^	int	dfl_xmit_fifo_size;$/;"	m	struct:serial_uart_config	file:
exit	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^	void	(*exit)(struct pci_dev *dev);$/;"	m	struct:pci_serial_quirk	file:
find_quirk	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^static struct pci_serial_quirk *find_quirk(struct pci_dev *dev)$/;"	f	file:
first_offset	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^	unsigned int first_offset;$/;"	m	struct:pciserial_board	file:
flags	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^	int	flags;$/;"	m	struct:serial_uart_config	file:
flags	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^	unsigned int flags;$/;"	m	struct:pciserial_board	file:
gNumberAPs	apcommon/apcommon.c	/^int	gNumberAPs = -1;		\/* Number of boards that have been opened and\/or flag = -1...$/;"	v
gNumberAPs	vmetech/apcommon/apcommon.c	/^int	gNumberAPs = -1;		\/* Number of boards that have been opened and\/or flag = -1...$/;"	v
get_param	apcommon/apcommon.c	/^long get_param()$/;"	f
get_param	vmetech/apcommon/apcommon.c	/^long get_param()$/;"	f
get_reg_num	AP471/drvr471.c	/^static unsigned get_reg_num()$/;"	f	file:
get_reg_num	vmetech/AP471/drvr471.c	/^static unsigned get_reg_num()$/;"	f	file:
gpAP	apcommon/apcommon.c	/^APDATA_STRUCT *gpAP[MAX_APS];	\/* pointer to the boards *\/$/;"	v
gpAP	vmetech/apcommon/apcommon.c	/^APDATA_STRUCT *gpAP[MAX_APS];	\/* pointer to the boards *\/$/;"	v
hdr	sock.cpp	/^	struct icmphdr hdr;$/;"	m	struct:packet	typeref:struct:packet::icmphdr	file:
head	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^	struct list_head	*head;$/;"	m	struct:irq_info	typeref:struct:irq_info::list_head	file:
hh	date.h	/^	UINT32 hh;$/;"	m	class:CDate
ier	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^	unsigned char		ier;$/;"	m	struct:uart_xr_port	file:
init	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^	int	(*init)(struct pci_dev *dev);$/;"	m	struct:pci_serial_quirk	file:
init_module	AP471/dev471/dev471.c	/^init_module( void )$/;"	f
init_module	vmetech/AP471/dev471/dev471.c	/^init_module( void )$/;"	f
init_one_xrpciserialcard	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^init_one_xrpciserialcard(struct pci_dev *dev, const struct pci_device_id *ent)$/;"	f	file:
input_byte	apcommon/apcommon.c	/^byte input_byte(int nHandle, byte *p)$/;"	f
input_byte	vmetech/apcommon/apcommon.c	/^byte input_byte(int nHandle, byte *p)$/;"	f
input_long	apcommon/apcommon.c	/^long input_long(int nHandle, long *p)$/;"	f
input_long	vmetech/apcommon/apcommon.c	/^long input_long(int nHandle, long *p)$/;"	f
input_word	apcommon/apcommon.c	/^word input_word(int nHandle, word *p)$/;"	f
input_word	vmetech/apcommon/apcommon.c	/^word input_word(int nHandle, word *p)$/;"	f
interrupt_thread	ap471.cpp	/^void * interrupt_thread(void * arg)$/;"	f
irq	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^	int			irq;$/;"	m	struct:irq_info	file:
irq_info	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^struct irq_info {$/;"	s	file:
irq_lists	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^static struct hlist_head irq_lists[NR_IRQ_HASH];$/;"	v	typeref:struct:hlist_head	file:
is_match_address	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^    unsigned char       is_match_address;$/;"	m	struct:uart_xr_port	file:
is_real_interrupt	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	363;"	d	file:
lBaseAddress	apcommon/apcommon.h	/^	long lBaseAddress;		\/* pointer to base address of board *\/$/;"	m	struct:__anon3
lBaseAddress	vmetech/apcommon/apcommon.h	/^	long lBaseAddress;		\/* pointer to base address of board *\/$/;"	m	struct:__anon1
lcr	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^	unsigned char		lcr;$/;"	m	struct:uart_xr_port	file:
length	commpkt.cpp	/^unsigned int CCommPkt::length()$/;"	f	class:CCommPkt
line	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^	int			line[0];$/;"	m	struct:serial_private	file:
list	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^	struct list_head	list;		\/* ports on this IRQ *\/$/;"	m	struct:uart_xr_port	typeref:struct:uart_xr_port::list_head	file:
location	AP471/AP471.h	/^  uint16_t location;          \/* AP location *\/$/;"	m	struct:cblk471
location	vmetech/AP471/AP471.h	/^  uint16_t location;          \/* AP location *\/$/;"	m	struct:cblk471
lock	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^	spinlock_t		lock;	\/* Protects list not the hash *\/$/;"	m	struct:irq_info	file:
low_baudrate_mode	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^static unsigned char low_baudrate_mode = 0;$/;"	v	file:
lsr_saved_flags	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^	unsigned char		lsr_saved_flags;$/;"	m	struct:uart_xr_port	file:
m_bLocked	thread.h	/^	bool m_bLocked;$/;"	m	class:CMutex
m_bPluseStop	jigapp.h	/^	bool m_bPluseStop;$/;"	m	class:CJigApp
m_bRun	jigapp.h	/^	bool m_bRun;$/;"	m	class:CJigApp
m_nFd	dev.h	/^	int m_nFd;$/;"	m	class:CDev
m_nFd	sock.h	/^	int m_nFd;$/;"	m	class:CSocket
m_nLastAcptSock	jigapp.h	/^	int m_nLastAcptSock;$/;"	m	class:CJigApp
m_nPktLen	commpkt.h	/^	unsigned int m_nPktLen;$/;"	m	class:CCommPkt
m_pPktBuf	commpkt.h	/^	unsigned char * m_pPktBuf;$/;"	m	class:CCommPkt
m_pStream	file.h	/^	FILE * m_pStream;$/;"	m	class:CFile
m_strFindStep	jigapp.h	/^	string m_strFindStep;$/;"	m	class:CJigApp
m_strName	file.h	/^	string m_strName;$/;"	m	class:CFile
m_strVolt	jigapp.h	/^	string m_strVolt[4];$/;"	m	class:CJigApp
m_tAp471	jigapp.h	/^	CAp471 m_tAp471;$/;"	m	class:CJigApp
m_tCblk	ap471.h	/^	cblk471 m_tCblk;$/;"	m	class:CAp471
m_tInterruptThread	ap471.h	/^	CThread m_tInterruptThread;$/;"	m	class:CAp471
m_tMutex	thread.h	/^	pthread_mutex_t m_tMutex;$/;"	m	class:CMutex
m_tOldTermIos	tty.h	/^	termios m_tOldTermIos;$/;"	m	class:CTty
m_tSocket	jigapp.h	/^	CSocket m_tSocket;$/;"	m	class:CJigApp
m_tTermIos	tty.h	/^	termios m_tTermIos;$/;"	m	class:CTty
m_tThread	thread.h	/^	pthread_t m_tThread;$/;"	m	class:CThread
m_tThreadAttr	thread.h	/^	pthread_attr_t m_tThreadAttr;$/;"	m	class:CThread
m_tTtyIobRs2321	jigapp.h	/^	CTty m_tTtyIobRs2321;$/;"	m	class:CJigApp
m_tTtyIobRs2322	jigapp.h	/^	CTty m_tTtyIobRs2322;$/;"	m	class:CJigApp
m_tTtyIobRs4221	jigapp.h	/^	CTty m_tTtyIobRs4221;$/;"	m	class:CJigApp
m_tTtyIobRs4222	jigapp.h	/^	CTty m_tTtyIobRs4222;$/;"	m	class:CJigApp
m_tTtyIobRs4223	jigapp.h	/^	CTty m_tTtyIobRs4223;$/;"	m	class:CJigApp
m_tTtyMccRs2321	jigapp.h	/^	CTty m_tTtyMccRs2321;$/;"	m	class:CJigApp
m_tTtyMccRs2322	jigapp.h	/^	CTty m_tTtyMccRs2322;$/;"	m	class:CJigApp
m_tTtyMccRs422	jigapp.h	/^	CTty m_tTtyMccRs422;$/;"	m	class:CJigApp
m_tTtyOccRs2321	jigapp.h	/^	CTty m_tTtyOccRs2321;$/;"	m	class:CJigApp
m_tTtyOccRs2322	jigapp.h	/^	CTty m_tTtyOccRs2322;$/;"	m	class:CJigApp
m_tTtyOccRs422	jigapp.h	/^	CTty m_tTtyOccRs422;$/;"	m	class:CJigApp
m_tTtyS0	jigapp.h	/^	CTty m_tTtyS0;\/\/MCU로부터 전원데이터 확인$/;"	m	class:CJigApp
m_tTtyTccRs2321	jigapp.h	/^	CTty m_tTtyTccRs2321;$/;"	m	class:CJigApp
m_tTtyTccRs2322	jigapp.h	/^	CTty m_tTtyTccRs2322;$/;"	m	class:CJigApp
m_tTtyTccRs422	jigapp.h	/^	CTty m_tTtyTccRs422;$/;"	m	class:CJigApp
main	AP471/drvr471.c	/^int main(int argc, char *argv[])$/;"	f
main	main.cpp	/^int main(int argc, char ** argv)$/;"	f
main	vmetech/AP471/drvr471.c	/^int main(argc, argv)$/;"	f
map471	AP471/AP471.h	/^struct map471$/;"	s
map471	vmetech/AP471/AP471.h	/^struct map471$/;"	s
mcr	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^	unsigned char		mcr;$/;"	m	struct:uart_xr_port	file:
mcr_force	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^	unsigned char		mcr_force;	\/* mask of forced bits *\/$/;"	m	struct:uart_xr_port	file:
mcr_mask	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^	unsigned char		mcr_mask;	\/* mask of user bits *\/$/;"	m	struct:uart_xr_port	file:
mm	date.h	/^	UINT32 mm;$/;"	m	class:CDate
msg	sock.cpp	/^	char msg[PING_PKT_SIZE - sizeof(struct icmphdr)];$/;"	m	struct:packet	file:
msi_status	AP471/dev471/dev471.c	/^int msi_status[MAX_APS];$/;"	v
msi_status	vmetech/AP471/dev471/dev471.c	/^int msi_status[MAX_APS];$/;"	v
msr_saved_flags	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^	unsigned char		msr_saved_flags;$/;"	m	struct:uart_xr_port	file:
multidrop_address	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^	unsigned char       multidrop_address;$/;"	m	struct:uart_xr_port	file:
multidrop_mode	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^    unsigned char       multidrop_mode;$/;"	m	struct:uart_xr_port	file:
nAPDeviceHandle	apcommon/apcommon.h	/^	int nAPDeviceHandle;		\/* handle from kernel open() *\/$/;"	m	struct:__anon3
nAPDeviceHandle	vmetech/apcommon/apcommon.h	/^	int nAPDeviceHandle;		\/* handle from kernel open() *\/$/;"	m	struct:__anon1
nDevInstance	apcommon/apcommon.h	/^	int nDevInstance;		\/* Device Instance *\/$/;"	m	struct:__anon3
nDevInstance	vmetech/apcommon/apcommon.h	/^	int nDevInstance;		\/* Device Instance *\/$/;"	m	struct:__anon1
nHandle	AP471/AP471.h	/^  int nHandle;                \/* handle to an open board *\/$/;"	m	struct:cblk471
nHandle	apcommon/apcommon.h	/^	int nHandle;			\/* handle from addpmc() *\/$/;"	m	struct:__anon3
nHandle	vmetech/AP471/AP471.h	/^  int nHandle;                \/* handle to an open board *\/$/;"	m	struct:cblk471
nHandle	vmetech/apcommon/apcommon.h	/^	int nHandle;			\/* handle from addpmc() *\/$/;"	m	struct:__anon1
nIntLevel	apcommon/apcommon.h	/^	int nIntLevel;			\/* Interrupt level *\/$/;"	m	struct:__anon3
nIntLevel	vmetech/apcommon/apcommon.h	/^	int nIntLevel;			\/* Interrupt level *\/$/;"	m	struct:__anon1
nInteruptID	apcommon/apcommon.h	/^	int nInteruptID;		\/* ID of interrupt handler *\/$/;"	m	struct:__anon3
nInteruptID	vmetech/apcommon/apcommon.h	/^	int nInteruptID;		\/* ID of interrupt handler *\/$/;"	m	struct:__anon1
name	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^	char	*name;$/;"	m	struct:serial_uart_config	file:
node	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^	struct			hlist_node node;$/;"	m	struct:irq_info	typeref:struct:irq_info::hlist_node	file:
nr	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^	unsigned int		nr;$/;"	m	struct:serial_private	file:
num_ports	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^	unsigned int num_ports;$/;"	m	struct:pciserial_board	file:
obj-m	AP471/dev471/Makefile	/^obj-m := $(TARGET).o$/;"	m
obj-m	vmetech/AP471/dev471/Makefile	/^obj-m := $(TARGET).o$/;"	m
open	AP471/dev471/dev471.c	/^open( struct inode *inode, struct file *fp )$/;"	f	file:
open	vmetech/AP471/dev471/dev471.c	/^open( struct inode *inode, struct file *fp )$/;"	f	file:
open_dev	AP471/dev471/dev471.c	/^int open_dev[MAX_APS];$/;"	v
open_dev	vmetech/AP471/dev471/dev471.c	/^int open_dev[MAX_APS];$/;"	v
operator +	date.cpp	/^CDate & CDate::operator + (INT32 & span)$/;"	f	class:CDate
operator ++	date.cpp	/^CDate & CDate::operator ++ (INT32)$/;"	f	class:CDate
operator -	date.cpp	/^CDate & CDate::operator - (INT32 & span)$/;"	f	class:CDate
operator --	date.cpp	/^CDate & CDate::operator -- (INT32)$/;"	f	class:CDate
operator =	date.cpp	/^CDate & CDate::operator = (CDate & date)$/;"	f	class:CDate
operator =	sock.cpp	/^CTcpSocket & CTcpSocket::operator = (const int & socket)$/;"	f	class:CTcpSocket
operator ==	date.cpp	/^bool CDate::operator == (CDate & date)$/;"	f	class:CDate
operator BOOL	ap471.h	/^	operator BOOL () const$/;"	f	class:CAp471
operator FILE *	file.cpp	/^CFile::operator FILE * () const$/;"	f	class:CFile
operator FILE *	file.cpp	/^CTextFile::operator FILE * () const$/;"	f	class:CTextFile
operator char *	commpkt.cpp	/^CCommPkt::operator char *() const$/;"	f	class:CCommPkt
operator int	dev.h	/^	virtual operator int () const$/;"	f	class:CDev
operator int	sock.cpp	/^CTcpSocket::operator int() const$/;"	f	class:CTcpSocket
operator int *	commpkt.cpp	/^CCommPkt::operator int *() const$/;"	f	class:CCommPkt
operator short *	commpkt.cpp	/^CCommPkt::operator short *() const$/;"	f	class:CCommPkt
operator unsigned char *	commpkt.cpp	/^CCommPkt::operator unsigned char *() const$/;"	f	class:CCommPkt
operator unsigned int *	commpkt.cpp	/^CCommPkt::operator unsigned int *() const$/;"	f	class:CCommPkt
operator unsigned short *	commpkt.cpp	/^CCommPkt::operator unsigned short *() const$/;"	f	class:CCommPkt
output_byte	apcommon/apcommon.c	/^void output_byte(int nHandle, byte *p, byte v)$/;"	f
output_byte	vmetech/apcommon/apcommon.c	/^void output_byte(int nHandle, byte *p, byte v)$/;"	f
output_long	apcommon/apcommon.c	/^void output_long(int nHandle, long *p, long v)$/;"	f
output_long	vmetech/apcommon/apcommon.c	/^void output_long(int nHandle, long *p, long v)$/;"	f
output_word	apcommon/apcommon.c	/^void output_word(int nHandle, word *p, word v)$/;"	f
output_word	vmetech/apcommon/apcommon.c	/^void output_word(int nHandle, word *p, word v)$/;"	f
p471Board	AP471/dev471/dev471.c	/^struct pci_dev *p471Board[MAX_APS];$/;"	v	typeref:struct:pci_dev
p471Board	vmetech/AP471/dev471/dev471.c	/^struct pci_dev *p471Board[MAX_APS];$/;"	v	typeref:struct:pci_dev
packet	sock.cpp	/^struct packet$/;"	s	file:
param	AP471/AP471.h	/^  uint16_t param;             \/* parameter mask for configuring board *\/$/;"	m	struct:cblk471
param	vmetech/AP471/AP471.h	/^  uint16_t param;             \/* parameter mask for configuring board *\/$/;"	m	struct:cblk471
pci_default_setup	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^pci_default_setup(struct serial_private *priv,$/;"	f	file:
pci_serial_quirk	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^struct pci_serial_quirk {$/;"	s	file:
pci_serial_quirks	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^static struct pci_serial_quirk pci_serial_quirks[] = {	$/;"	v	typeref:struct:pci_serial_quirk	file:
pciserial_board	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^struct pciserial_board {$/;"	s	file:
pciserial_remove_ports	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^void pciserial_remove_ports(struct serial_private *priv)$/;"	f
ping	sock.cpp	/^int ping(const char * address)$/;"	f
pluse_thread	jigapp.cpp	/^void * pluse_thread(void * arg)$/;"	f
pm	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^	void			(*pm)(struct uart_port *port,$/;"	m	struct:uart_xr_port	file:
poll_timeout	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^static inline int poll_timeout(int timeout)$/;"	f	file:
port	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^	struct uart_port	port;$/;"	m	struct:uart_xr_port	typeref:struct:uart_xr_port::uart_port	file:
psts471	AP471/drvr471.c	/^void psts471(struct cblk471 *c_blk)$/;"	f
psts471	vmetech/AP471/drvr471.c	/^void psts471(c_blk)$/;"	f
quirk	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^	struct pci_serial_quirk	*quirk;$/;"	m	struct:serial_private	typeref:struct:serial_private::pci_serial_quirk	file:
quirk_id_matches	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^static inline int quirk_id_matches(u32 quirk_id, u32 dev_id)$/;"	f	file:
quot_coeff	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^static int quot_coeff = 16 ;$/;"	v	file:
read	AP471/dev471/dev471.c	/^read( struct file *fp, char *buf, size_t length, loff_t *offset )$/;"	f	file:
read	vmetech/AP471/dev471/dev471.c	/^read( struct file *fp, char *buf, size_t length, loff_t *offset )$/;"	f	file:
receive_chars	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^receive_chars(struct uart_xr_port *up, unsigned int *status)$/;"	f	file:
recv_thread	jigapp.cpp	/^void * recv_thread(void * arg)$/;"	f
reg	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^	unsigned char reg;$/;"	m	struct:xrioctl_rw_reg	file:
reg_shift	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^	unsigned int reg_shift;$/;"	m	struct:pciserial_board	file:
regvalue	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^	unsigned char regvalue;$/;"	m	struct:xrioctl_rw_reg	file:
release	AP471/dev471/dev471.c	/^release( struct inode *inode, struct file *fp )$/;"	f	file:
release	vmetech/AP471/dev471/dev471.c	/^release( struct inode *inode, struct file *fp )$/;"	f	file:
remapped_bar	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^	void __iomem		*remapped_bar[PCI_NUM_BAR_RESOURCES];$/;"	m	struct:serial_private	file:
remove_one_xrpciserialcard	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^static void __devexit remove_one_xrpciserialcard(struct pci_dev *dev)$/;"	f	file:
ret_val	AP471/dev471/dev471.c	/^int ret_val = 0;$/;"	v
ret_val	vmetech/AP471/dev471/dev471.c	/^int ret_val = 0;$/;"	v
revision	AP471/AP471.h	/^  uint32_t revision;          \/* Firmware Revision *\/$/;"	m	struct:cblk471
revision	vmetech/AP471/AP471.h	/^  uint32_t revision;          \/* Firmware Revision *\/$/;"	m	struct:cblk471
rpnt471	AP471/rpnt471.c	/^uint16_t rpnt471(struct cblk471 *c_blk, uint16_t port, uint16_t point)$/;"	f
rpnt471	vmetech/AP471/rpnt471.c	/^uint16_t rpnt471(struct cblk471 *c_blk, uint16_t port, uint16_t point)$/;"	f
rprt471	AP471/rprt471.c	/^uint16_t rprt471(struct cblk471 *c_blk, uint16_t port)$/;"	f
rprt471	vmetech/AP471/rprt471.c	/^uint16_t rprt471(struct cblk471 *c_blk, uint16_t port)$/;"	f
rsts471	AP471/rsts471.c	/^void rsts471(struct cblk471 *c_blk)$/;"	f
rsts471	vmetech/AP471/rsts471.c	/^void rsts471(struct cblk471 *c_blk)$/;"	f
sblk471	AP471/AP471.h	/^struct sblk471$/;"	s
sblk471	vmetech/AP471/AP471.h	/^struct sblk471$/;"	s
sblk_ptr	AP471/AP471.h	/^  struct sblk471 *sblk_ptr;   \/* Status block pointer *\/$/;"	m	struct:cblk471	typeref:struct:cblk471::sblk471
sblk_ptr	vmetech/AP471/AP471.h	/^  struct sblk471 *sblk_ptr;   \/* Status block pointer *\/$/;"	m	struct:cblk471	typeref:struct:cblk471::sblk471
scfg471	AP471/drvr471.c	/^void scfg471(struct cblk471 *c_blk)$/;"	f
scfg471	vmetech/AP471/drvr471.c	/^void scfg471(c_blk)$/;"	f
serial_do_unlink	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^static void serial_do_unlink(struct irq_info *i, struct uart_xr_port *up)$/;"	f	file:
serial_in	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^static _INLINE_ unsigned int serial_in(struct uart_xr_port *up, int offset)$/;"	f	file:
serial_link_irq_chain	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^static int serial_link_irq_chain(struct uart_xr_port *up)$/;"	f	file:
serial_out	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^serial_out(struct uart_xr_port *up, int offset, int value)$/;"	f	file:
serial_private	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^struct serial_private {$/;"	s	file:
serial_uart_config	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^struct serial_uart_config {$/;"	s	file:
serial_unlink_irq_chain	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^static void serial_unlink_irq_chain(struct uart_xr_port *up)$/;"	f	file:
serialxr_break_ctl	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^static void serialxr_break_ctl(struct uart_port *port, int break_state)$/;"	f	file:
serialxr_config_port	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^static void serialxr_config_port(struct uart_port *port, int flags)$/;"	f	file:
serialxr_enable_ms	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^static void serialxr_enable_ms(struct uart_port *port)$/;"	f	file:
serialxr_exit	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^module_exit(serialxr_exit);$/;"	v
serialxr_exit	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^static void __exit serialxr_exit(void)$/;"	f	file:
serialxr_find_match_or_unused	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^static struct uart_xr_port *serialxr_find_match_or_unused(struct uart_port *port)$/;"	f	file:
serialxr_get_divisor	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^static unsigned int serialxr_get_divisor(struct uart_port *port, unsigned int baud)$/;"	f	file:
serialxr_get_mctrl	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^static unsigned int serialxr_get_mctrl(struct uart_port *port)$/;"	f	file:
serialxr_handle_port	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^static void serialxr_handle_port(struct uart_xr_port *up)$/;"	f	file:
serialxr_init	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^module_init(serialxr_init);$/;"	v
serialxr_init	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^static int __init serialxr_init(void)$/;"	f	file:
serialxr_interrupt	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^static irqreturn_t serialxr_interrupt(int irq, void *dev_id)$/;"	f	file:
serialxr_ioctl	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^serialxr_ioctl(struct uart_port *port, unsigned int cmd, unsigned long arg)$/;"	f	file:
serialxr_pm	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^serialxr_pm(struct uart_port *port, unsigned int state,$/;"	f	file:
serialxr_pops	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^static struct uart_ops serialxr_pops = {$/;"	v	typeref:struct:uart_ops	file:
serialxr_ports	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^static struct uart_xr_port serialxr_ports[NR_PORTS];$/;"	v	typeref:struct:uart_xr_port	file:
serialxr_register_port	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^int serialxr_register_port(struct uart_port *port, unsigned short deviceid, unsigned char channelnum)$/;"	f
serialxr_release_port	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^static void serialxr_release_port(struct uart_port *port)$/;"	f	file:
serialxr_request_port	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^static int serialxr_request_port(struct uart_port *port)$/;"	f	file:
serialxr_set_mctrl	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^static void serialxr_set_mctrl(struct uart_port *port, unsigned int mctrl)$/;"	f	file:
serialxr_set_special_baudrate	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^serialxr_set_special_baudrate(struct uart_port *port,unsigned int special_baudrate)$/;"	f	file:
serialxr_set_termios	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^serialxr_set_termios(struct uart_port *port, struct ktermios *termios,$/;"	f	file:
serialxr_shutdown	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^static void serialxr_shutdown(struct uart_port *port)$/;"	f	file:
serialxr_start_tx	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^static void serialxr_start_tx(struct uart_port *port)$/;"	f	file:
serialxr_startup	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^static int serialxr_startup(struct uart_port *port)$/;"	f	file:
serialxr_stop_rx	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^static void serialxr_stop_rx(struct uart_port *port)$/;"	f	file:
serialxr_stop_tx	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^static void serialxr_stop_tx(struct uart_port *port)$/;"	f	file:
serialxr_timeout	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^static void serialxr_timeout(unsigned long data)$/;"	f	file:
serialxr_tx_empty	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^static unsigned int serialxr_tx_empty(struct uart_port *port)$/;"	f	file:
serialxr_type	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^serialxr_type(struct uart_port *port)$/;"	f	file:
serialxr_unregister_port	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^void serialxr_unregister_port(int line)$/;"	f
setup	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^	int	(*setup)(struct serial_private *, $/;"	m	struct:pci_serial_quirk	file:
setup_port	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^setup_port(struct serial_private *priv, struct uart_port *port,$/;"	f	file:
share_irqs	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^unsigned int share_irqs = SERIALEXAR_SHARE_IRQS;$/;"	v
ss	date.h	/^	UINT32 ss;$/;"	m	class:CDate
subdevice	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^	u32	subdevice;$/;"	m	struct:pci_serial_quirk	file:
subvendor	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^	u32	subvendor;$/;"	m	struct:pci_serial_quirk	file:
timer	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^	struct timer_list	timer;		\/* "no irq" timer *\/$/;"	m	struct:uart_xr_port	typeref:struct:uart_xr_port::timer_list	file:
transmit_chars	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^static void transmit_chars(struct uart_xr_port *up)$/;"	f	file:
tty_thread	jigapp.cpp	/^void * tty_thread(void * arg)$/;"	f
tx_loadsz	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^	unsigned int		tx_loadsz;	\/* transmit fifo load size *\/$/;"	m	struct:uart_xr_port	file:
uart_config	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^static const struct serial_uart_config uart_config[PORT_MAX_XR+1] = {$/;"	v	typeref:struct:serial_uart_config	file:
uart_get_divisor_exar	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^static unsigned int uart_get_divisor_exar(struct uart_port *port, unsigned int baud)$/;"	f	file:
uart_index	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^	int    uart_index[NR_PORTS];$/;"	m	struct:serial_private	file:
uart_offset	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^	unsigned int uart_offset;$/;"	m	struct:pciserial_board	file:
uart_xr_port	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^struct uart_xr_port {$/;"	s	file:
vendor	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^	u32	vendor;$/;"	m	struct:pci_serial_quirk	file:
word	apcommon/apcommon.h	/^typedef unsigned short word;		\/* custom data type *\/$/;"	t
word	vmetech/apcommon/apcommon.h	/^typedef unsigned short word;		\/* custom data type *\/$/;"	t
wpnt471	AP471/wpnt471.c	/^uint16_t wpnt471(struct cblk471 *c_blk, uint16_t port, uint16_t point, uint16_t value)$/;"	f
wpnt471	vmetech/AP471/wpnt471.c	/^uint16_t wpnt471(struct cblk471 *c_blk, uint16_t port, uint16_t point, uint16_t value)$/;"	f
wprt471	AP471/wprt471.c	/^uint16_t wprt471(struct cblk471 *c_blk, uint16_t port, uint16_t value)$/;"	f
wprt471	vmetech/AP471/wprt471.c	/^uint16_t wprt471(struct cblk471 *c_blk, uint16_t port, uint16_t value)$/;"	f
write	AP471/dev471/dev471.c	/^write( struct file *fp, const char *buf, size_t length, loff_t *offset )$/;"	f	file:
write	vmetech/AP471/dev471/dev471.c	/^write( struct file *fp, const char *buf, size_t length, loff_t *offset )$/;"	f	file:
xr_152port	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^	xr_152port,$/;"	e	enum:xrpci_board_num_t	file:
xr_154port	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^	xr_154port,$/;"	e	enum:xrpci_board_num_t	file:
xr_158port	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^	xr_158port,$/;"	e	enum:xrpci_board_num_t	file:
xr_252port	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^	xr_252port,$/;"	e	enum:xrpci_board_num_t	file:
xr_254port	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^	xr_254port,$/;"	e	enum:xrpci_board_num_t	file:
xr_258port	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^	xr_258port,$/;"	e	enum:xrpci_board_num_t	file:
xr_2port	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^	xr_2port,$/;"	e	enum:xrpci_board_num_t	file:
xr_4354port	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^	xr_4354port,$/;"	e	enum:xrpci_board_num_t	file:
xr_4358port	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^	xr_4358port,$/;"	e	enum:xrpci_board_num_t	file:
xr_4port	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^	xr_4port,$/;"	e	enum:xrpci_board_num_t	file:
xr_8354port	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^	xr_8354port,$/;"	e	enum:xrpci_board_num_t	file:
xr_8358port	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^	xr_8358port,$/;"	e	enum:xrpci_board_num_t	file:
xr_8port	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^	xr_8port = 0,$/;"	e	enum:xrpci_board_num_t	file:
xr_uart_driver	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^static struct uart_driver xr_uart_driver = {$/;"	v	typeref:struct:uart_driver	file:
xrioctl_rw_reg	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^struct xrioctl_rw_reg {$/;"	s	file:
xrpci_board_num_t	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^enum xrpci_board_num_t {$/;"	g	file:
xrserial_pci_driver	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^static struct pci_driver xrserial_pci_driver = {$/;"	v	typeref:struct:pci_driver	file:
xrserial_pci_tbl	vmetech/AP50x_AP51x_AP52x/xr17v35xAP521.c	/^static struct pci_device_id xrserial_pci_tbl[] = {$/;"	v	typeref:struct:pci_device_id	file:
~CAp471	ap471.cpp	/^CAp471::~CAp471()$/;"	f	class:CAp471
~CCommPkt	commpkt.cpp	/^CCommPkt::~CCommPkt()$/;"	f	class:CCommPkt
~CConfig	config.cpp	/^CConfig::~CConfig()$/;"	f	class:CConfig
~CDate	date.cpp	/^CDate::~CDate()$/;"	f	class:CDate
~CDev	dev.h	/^	~CDev()$/;"	f	class:CDev
~CFile	file.cpp	/^CFile::~CFile()$/;"	f	class:CFile
~CIpAddress	sock.cpp	/^CIpAddress::~CIpAddress()$/;"	f	class:CIpAddress
~CJigApp	jigapp.cpp	/^CJigApp::~CJigApp()$/;"	f	class:CJigApp
~CJigPkt	jigpkt.cpp	/^CJigPkt::~CJigPkt()$/;"	f	class:CJigPkt
~CMutex	thread.cpp	/^CMutex::~CMutex()$/;"	f	class:CMutex
~CSocket	sock.cpp	/^CSocket::~CSocket()$/;"	f	class:CSocket
~CString	str.cpp	/^CString::~CString()$/;"	f	class:CString
~CTcpSocket	sock.cpp	/^CTcpSocket::~CTcpSocket()$/;"	f	class:CTcpSocket
~CTextFile	file.cpp	/^CTextFile::~CTextFile()$/;"	f	class:CTextFile
~CThread	thread.cpp	/^CThread::~CThread()$/;"	f	class:CThread
~CTty	tty.cpp	/^CTty::~CTty()$/;"	f	class:CTty
~CUdpSocket	sock.cpp	/^CUdpSocket::~CUdpSocket()$/;"	f	class:CUdpSocket
